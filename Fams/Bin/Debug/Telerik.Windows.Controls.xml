<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Controls</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Controls.ActionOnLostFocus">
            <summary>
            Represents the possible values of an action to be taken when an element of the RadGridView loses focus.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.CancelEdit">
            <summary>
            When the focus of a field in edit mode is lost, its edit mode will be canceled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.CommitEdit">
            <summary>
            When the focus of a field in edit mode is lost, its contents will be validated.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ActionOnLostFocus.None">
            <summary>
            When the focus of an element is lost, no specific action will be taken.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CancelRoutedEventArgs">
            <summary>
            Contains state information and event data associated with a cancelable routed event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.RadRoutedEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class, 
            using the supplied routed event identifier. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the RadRoutedEventArgs class, using 
            the supplied routed event identifier, and providing the opportunity 
            to declare a different source for the event. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
            </summary>
            <param name="genericHandler">The generic handler / delegate implementation to be invoked.</param>
            <param name="genericTarget">The target on which the provided handler should be invoked.</param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedEventArgs.OnSetSource(System.Object)">
            <summary>
            When overridden in a derived class, provides a notification callback entry point whenever the value of the Source property of an instance changes.
            </summary>
            <param name="newSource">The new value that Source is being set to.</param>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.RoutedEvent">
            <summary>
            Gets or sets the RoutedEvent associated with this RoutedEventArgs instance. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.Source">
            <summary>
            Gets or sets a reference to the object that raised the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling 
            for a routed event as it travels the route. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RadRoutedEventArgs.OriginalSource">
            <summary>
            Gets the original reporting source as determined by pure hit testing, 
            before any possible Source adjustment by a parent class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event identifier.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CancelRoutedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CancelRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event identifier for this instance of the <see cref="T:System.Windows.RoutedEventArgs"/> class.</param>
            <param name="source">An alternate source that will be reported when the event is handled.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.CancelRoutedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
            <value><c>True</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.PropertyMetadata">
            <summary>
            Defines certain behavior aspects of a dependency property as it is applied 
            to a specific type, including conditions it was registered with. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,Telerik.Windows.CoerceValueCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified default value and callbacks. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
            <param name="coerceValueCallback">
            Reference to a handler implementation that is to be called whenever the 
            property system calls CoerceValue against this property.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            PropertyChangedCallback implementation reference. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            PropertyChangedCallback implementation reference. 
            </summary>
            <param name="propertyChangedCallback">
            Reference to a handler implementation that is to be called by the 
            property system whenever the effective value of the property changes.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            default value. 
            </summary>
            <param name="defaultValue">
            The default value of the dependency property, usually 
            provided as a value of some specific type.
            </param>
        </member>
        <member name="M:Telerik.Windows.PropertyMetadata.#ctor">
            <summary>
            Initializes a new instance of the PropertyMetadata class with the specified 
            default value. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBox">
            <summary>
            Represents a selection control with a drop-down list that can be shown or hidden by
            clicking the arrow on the control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Selector">
            <summary>
            Represents a control that allows a user to select items from among its child elements.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemsControl">
            <summary>
                Base class for all the items controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
            <summary>
                Identifies the ItemContainerStyle property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
            <summary>
            Identifies the IsTextSearchEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
            <summary>
                Identifies the ItemContainerStyleSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
            <summary>
                Identifies the ItemTemplateSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemsControl.IsFocusedProperty">
            <summary>
            Identifies the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.#ctor">
            <summary>
            Initializes a new instance of the ItemsControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the ItemsControl of the given container.
            </summary>
            <param name="container">The container for which to retrieve the ItemsControl.</param>
            <returns>The ItemsControl of the container.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application 
            code or internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ChangeVisualState">
            <summary>
            Changes the visual state of the control using transitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnIsEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsEnabled property of the control changes.
            </summary>
            <param name="e">The information about the new and old value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
                When overriden OnRadItemTemplateSelectorChanged is called when the TemplateSelector for the contained items changes.
            </summary>
            <param name="oldItemTemplateSelector">The old TemplateSelector.</param>
            <param name="newItemTemplateSelector">The new TemplateSelector.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The Item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControl.OnIsFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">Event args with the old and the new value of the property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.IsTextSearchEnabled">
            <summary>
            Gets or sets a value indicating whether TextSearch is enabled on the 
            ItemsControl instance. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.HasItems">
            <summary>
            Gets whether the ItemsControl has any children.
            </summary>
            TODO: DOC: Add short summary.
            TODO: Should this be made a dependency property?
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.IsFocused">
            <summary>
            	Gets a value indicating whether the control is focused.
            </summary>
            <remarks>
            	<para>
                    Please note that <strong>IsFocused</strong> is a read only property. 
                    To focus the Control, use the <see cref="M:System.Windows.Controls.Control.Focus"/> method.
                </para> 
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerStyle">
            <summary>
                Gets or sets the style for the item containers of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
            <summary>
                Gets or sets the style selector for the items of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemTemplateSelector">
            <summary>
            Gets or sets the template selector for the items of the control. This is a dependency proeprty.
            </summary>
            TODO: DOC: Add summary / examples.
        </member>
        <member name="P:Telerik.Windows.Controls.ItemsControl.ItemContainerGenerator">
            <summary>
            Gets the ItemContainerGenerator that is associated with the control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedValuePathProperty">
            <summary>
            Identifies the SelectedValuePath dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedValueProperty">
            <summary>
            Identifies the SelectedValue dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.IsSelectedProperty">
            <summary>
            Identifies the IsSelected attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Selector.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.GetIsSelected(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsSelected attached property that indicates whether an item is selected.
            </summary>
            <param name="element">Object to query concerning the IsSelected property.</param>
            <returns>Bool value, true if the IsSelected property is true.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the Selected attached event. 
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to add.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the Unselected attached event. 
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to add.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the Selected attached event.
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the Unselected attached event.
            </summary>
            <param name="element">Element that listens to this event.</param>
            <param name="handler">Event handler to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a property value that indicates whether an item in a Selector is selected.
            </summary>
            <param name="element">Object on which to set the property.</param>
            <param name="isSelected">Value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> property changes.
            </summary>
            <param name="e">Information about the change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectedValueChanged(System.Object,System.Object)">
            <summary>
            Called when the SelectedValue property is changed.
            </summary>
            <param name="oldValue">The old value of the SelectedValue property.</param>
            <param name="newValue">The new value of the SelectedValue property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.OnSelectedValuePathChanged(System.String,System.String)">
            <summary>
            Called when the SelectedValuePath property is changed.
            </summary>
            <param name="oldValue">The old value of the SelectedValuePath property.</param>
            <param name="newValue">The new value of the SelectedValuePath property.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Selector.SelectionChanged">
            <summary>
            Occurs when the selection of a Selector changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedValuePath">
            <summary>
            Gets or sets ... This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedValue">
            <summary>
            Gets or sets ... This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedIndex">
            <summary>
            Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectedItem">
            <summary>
            Gets or sets the first item in the current selection or returns null if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Begin">
            <summary>
            Begin tracking selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.SelectJustThisItem(`0)">
            <summary>
            Select just this item; all other items in Selection will be removed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Cancel">
            <summary>
            Cancels the currently active SelectionChanger.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Select(`0)">
            <summary>
            Queue something to be added to the selection.
            Does nothing if the item is already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.Unselect(`0)">
            <summary>
            Queue something to be removed from the selection.
            Does nothing if the item is not already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Selector.SelectionChanger`1.AddToSelection(`0)">
            <summary>
            Commit selection changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Selector.SelectionChanger`1.IsActive">
            <summary>
            True if there is a SelectionChange currently in progress.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBox.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBox.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ListBox"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.SelectAll">
            <summary>
            Selects all.
            </summary>
            <exception cref="T:System.NotSupportedException"><c>NotSupportedException</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ListBoxItem"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            True if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Called when the selection changes.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBox.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when OnKeyDown event is raised.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.FocusedItem">
            <summary>
            Gets the focused item.
            </summary>
            <value>The focused item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.SelectedItems">
            <summary>
            Gets or sets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>The selection mode.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.StringToLongTypeConverter">
            <summary>
            This class is used by the design-time and XAML infrastructure to convert string to long.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the StringToLong class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StringToLongTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.Designer">
            <summary>
            Wraps the system DesignTimeProperties in order to allow design time simulation for unit testing purposes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.Designer.SimulateDesignMode(System.Boolean)">
            <summary>
            Simulates design mode for the purposes of unit testing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.WindowCommands">
            <summary>
            Holds commands that can be used by a window.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Maximize">
            <summary>
            Gets value that represents the maximize window command.
            </summary>
            <value>The maximize command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Minimize">
            <summary>
            Gets value that represents the minimize window command.
            </summary>
            <value>The minimize command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Restore">
            <summary>
            Gets value that represents the restore window command.
            </summary>
            <value>The restore command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Close">
            <summary>
            Gets value that represents the close window command.
            </summary>
            <value>The close command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Confirm">
            <summary>
            Gets value that represents the Confirm window command.
            </summary>
            <value>The Confirm command.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.WindowCommands.Cancel">
            <summary>
            Gets value that represents the Cancel window command.
            </summary>
            <value>The Cancel command.</value>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Maximize">
            <summary>
            Maximazes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Minimize">
            <summary>
            Minimizes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Restore">
            <summary>
            Restores the window to Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Confirm">
            <summary>
            Closes the window with DilogResult true.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowCommands.CommandId.Cancel">
            <summary>
            Closes the window with DilogResult false.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DoubleToGridLengthConverter">
            <summary>
            Value converter used with binding to Convert double to GridLength.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.INotifyLayoutChange">
            <summary>
            Notifies client when starts and finishes updating the layout.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.INotifyLayoutChange.LayoutChangeStarted">
            <summary>
            Occurs when the layout change is started.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.INotifyLayoutChange.LayoutChangeEnded">
            <summary>
            Occurs when the layout change is ended.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.INotifyLayoutChange.IsLayoutChanging">
            <summary>
            Gets a value indicating whether this instance is layout changing.
            </summary>
            <value>
            	<c>true</c> if this instance is layout changing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation">
            <summary>
            Animation for the Expander Expand/Collapse.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.RadAnimation">
            <summary>
            Base class for dynamic control animations.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.RadAnimation.CreateAnimation(System.Windows.Controls.Control)">
            <summary>
            When overridden in a derived class this method is called when the animation for an 
            instance of a control needs to be created.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.RadAnimation.UpdateAnimation(System.Windows.Controls.Control,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            	When overridden in a derived class this method updates the animation
            	before it is played.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyboard that needs to be updated.</param>
            <param name="args">A set of arguments used for animation creation.</param>
            <remarks>
            	<para>
            		Currently the method sets the <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> of the storyboard to
            		the global <strong>AnimationSpeedRatio</strong> if the local <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> is null.
            		If the local <see cref="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio"/> value is set, it will be used.
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.RadAnimation.AnimationName">
            <summary>
            Gets or sets the name of the animation.
            </summary>
            <remarks>
            	<para>
            		This property is used by the NamedAnimationSelector to identify the 
            		correct animation to return. 
            	</para>
            	<para>
            		It is not used outside the NamedAnimationSelector
            	</para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.RadAnimation.SpeedRatio">
            <summary>
            Gets or sets the value for the SpeedRatio of the Storyboard generated by this animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.CreateAnimation(System.Windows.Controls.Control)">
            <summary>
            Creates the Expander animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.UpdateAnimation(System.Windows.Controls.Control,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates the ExpanderAnimation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="args">Optional arguments that the animation needs, can be provided by the control.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.Direction">
            <summary>
            Gets or sets a value indicating whether the direction of the animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.ExpanderExpandCollapseAnimation.TargetName">
            <summary>
            Gets or sets the name of the element that sould be animated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from Visibility enumeration values.
            InvertedBooleanToVisibilityConverter converts "true" to Visibility.Collapsed and "false" to Visibility.Visible.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.InvertedBooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.MathUtilities">
            <summary>
            Provides static methods not included in the standard Math class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.MathUtilities.IsInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if a value is within a specified range
            </summary>
            <param name="value">The value to check.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>True if the values is within the range, fals otherwise</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.CanExecuteRoutedEventArgs">
            <summary>
            Provides data for the CanExecute and PreviewCanExecute routed events. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.CanExecute">
            <summary>
            Gets or sets a value that indicates whether the RoutedCommand associated with this event can be executed on the command target. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.Command">
            <summary>
            Gets the command associated with this event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CanExecuteRoutedEventArgs.Parameter">
            <summary>
            Gets the command specific data. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CanExecuteRoutedEventHandler">
            <summary>
            Represents the method that will handle the CanExecute event. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandBinding">
            <summary>
            Binds a RoutedCommand to the event handlers that implement the command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="executed">The executed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.ExecutedRoutedEventHandler,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="executed">The executed.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.CanExecute">
            <summary>
            Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the command target. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.Executed">
            <summary>
            Occurs when the command associated with this CommandBinding executes. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.PreviewCanExecute">
            <summary>
            Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the current command target. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandBinding.PreviewExecuted">
            <summary>
            Occurs when the command associated with this CommandBinding executes. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.CommandBinding.Command">
            <summary>
            Gets or sets the ICommand associated with this CommandBinding. 
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandBindingCollection">
            <summary>
            Represents a collection of CommandBinding objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.CommandConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.CommandManager">
            <summary>
            Provides command related utility methods that register CommandBinding and InputBinding objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.CanExecuteEvent">
            <summary>
            Identifies the CanExecute attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.ExecutedEvent">
            <summary>
            Identifies the Executed attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.PreviewCanExecuteEvent">
            <summary>
            Identifies the PreviewCanExecute attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.PreviewExecutedEvent">
            <summary>
            Identifies the PreviewExecuted attached event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.InputBindingsProperty">
            <summary>
            Identifies the InputBindings dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.CommandManager.CommandBindingsProperty">
            <summary>
            Identifies the CommandBindings dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.GetInputBindings(System.Windows.DependencyObject)">
            <summary>
            Gets the collection of input bindings associated with this element. 
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.SetInputBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.InputBindingCollection)">
            <summary>
            Sets the collection of input bindings associated with this element. 
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.GetCommandBindings(System.Windows.DependencyObject)">
            <summary>
            Gets a collection of CommandBinding objects associated with this element. A CommandBinding enables command handling for this element, 
            and declares the linkage between a command, its events, and the handlers attached by this element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.SetCommandBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.CommandBindingCollection)">
            <summary>
            Sets a collection of CommandBinding objects associated with this element. A CommandBinding enables command handling for this element, 
            and declares the linkage between a command, its events, and the handlers attached by this element.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Attaches the specified CanExecuteRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Attaches the specified ExecutedRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddPreviewCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Attaches the specified CanExecuteRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.AddPreviewExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Attaches the specified ExecutedRoutedEventHandler to the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemoveCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Detaches the specified CanExecuteRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemoveExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Detaches the specified ExecutedRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.CanExecuteRoutedEventHandler)">
            <summary>
            Detaches the specified CanExecuteRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RemovePreviewExecutedHandler(System.Windows.DependencyObject,Telerik.Windows.Controls.ExecutedRoutedEventHandler)">
            <summary>
            Detaches the specified ExecutedRoutedEventHandler from the specified element. 
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RegisterClassCommandBinding(System.Type,Telerik.Windows.Controls.CommandBinding)">
            <summary>
            Registers a CommandBinding with the specified type. 
            </summary>
            <param name="type">The type.</param>
            <param name="commandBinding">The command binding.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.RegisterClassInputBinding(System.Type,Telerik.Windows.Controls.InputBinding)">
            <summary>
            Registers the specified InputBinding with the specified type. 
            </summary>
            <param name="type">The type.</param>
            <param name="inputBinding">The input binding.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.CommandManager.InvalidateRequerySuggested">
            <summary>
            Forces the CommandManager to raise the RequerySuggested event. 
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.CommandManager.RequerySuggested">
            <summary>
            Occurs when the CommandManager detects conditions that might change the ability of a command to execute. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExecutedRoutedEventArgs">
            <summary>
            Provides data for the Executed and PreviewExecuted routed events. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ExecutedRoutedEventArgs.Command">
            <summary>
            Gets the command that was invoked. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ExecutedRoutedEventArgs.Parameter">
            <summary>
            Gets data parameter of the command. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExecutedRoutedEventHandler">
            <summary>
            Represents the method that will handle the CommandBinding.Executed and CommandBinding.PreviewExecuted routed events, as well as related attached events. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Telerik.Windows.Controls.ICommandSource">
            <summary>
            Defines an object that knows how to invoke a command. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ICommandSource.CommandTarget">
            <summary>
            The object that the command is being executed on. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InputBinding">
            <summary>
            Represents a binding between an InputGesture and a command. The command is potentially a RoutedCommand. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.InputGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="inputGesture">The input gesture.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.InputBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputBinding"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.Command">
            <summary>
            Gets the command that will be executed when the command source is invoked.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.CommandParameter">
            <summary>
            Represents a user defined data value that can be passed to the command when it is executed.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.CommandTarget">
            <summary>
            The object that the command is being executed on.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.InputBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding. 
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.InputBindingCollection">
            <summary>
            Represents an ordered collection of InputBinding objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InputGesture">
            <summary>
            Abstract class that describes input device gestures. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputGesture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InputGesture"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InputGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object. 
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.InputGestureCollection">
            <summary>
            Represents an ordered collection of InputGesture objects. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.KeyBinding">
            <summary>
            Binds a KeyGesture to a RoutedCommand (or another ICommand implementation). 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.KeyGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding.
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Key">
            <summary>
            Gets or sets the Key of the KeyGesture associated with this KeyBinding. 
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyBinding.Modifiers">
            <summary>
            Gets or sets the ModifierKeys of the KeyGesture associated with this KeyBinding. 
            </summary>
            <value>The modifiers.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.KeyConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.KeyGesture">
            <summary>
            Defines a keyboard combination that can be used to invoke a command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="displayString">The display string.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
            <summary>
            Returns a string that can be used to display the KeyGesture. 
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.KeyGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.DisplayString">
            <summary>
            Gets a string representation of this KeyGesture. 
            </summary>
            <value>The display string.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.Key">
            <summary>
            Gets the key associated with this KeyGesture. 
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.KeyGesture.Modifiers">
            <summary>
            Gets the modifier keys associated with this KeyGesture. 
            </summary>
            <value>The modifiers.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.KeyGestureConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.ModifierKeysConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseAction">
            <summary>
            Specifies constants that define actions performed by the mouse. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.LeftClick">
            <summary>
            A left mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.LeftDoubleClick">
            <summary>
            A left mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.MiddleClick">
            <summary>
            A middle mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.MiddleDoubleClick">
            <summary>
            A middle mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.None">
            <summary>
            No action. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.RightClick">
            <summary>
            A right mouse button click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.RightDoubleClick">
            <summary>
            A right mouse button double-click. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.MouseAction.WheelClick">
            <summary>
            A mouse wheel rotation. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.MouseActionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseActionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseBinding">
            <summary>
            Binds a MouseGesture to a RoutedCommand (or another ICommand implementation). 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseBinding"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseBinding.#ctor(System.Windows.Input.ICommand,Telerik.Windows.Controls.MouseGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseBinding.Gesture">
            <summary>
            Gets or sets the InputGesture associated with this input binding.
            </summary>
            <value>The gesture.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseBinding.MouseAction">
            <summary>
            Gets or sets the MouseAction associated with this MouseBinding. 
            </summary>
            <value>The mouse action.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.MouseGesture">
            <summary>
            Defines a mouse input gesture that can be used to invoke a command. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor(Telerik.Windows.Controls.MouseAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.#ctor(Telerik.Windows.Controls.MouseAction,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.MouseGesture.Matches(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When overridden in a derived class, determines whether the specified InputGesture matches the input associated with the specified InputEventArgs object.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="inputEventArgs">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseGesture.Modifiers">
            <summary>
            Gets or sets the modifier keys associated with this MouseGesture. 
            </summary>
            <value>ModifierKeys.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.MouseGesture.MouseAction">
            <summary>
            Gets or sets the MouseAction associated with this gesture. 
            </summary>
            <value>MouseAction.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Design.MouseGestureConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.Design.MouseGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="destinationType"/> is null.
            </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.RoutedCommand">
            <summary>
            Defines a command that implements ICommand and is routed through the element tree. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor(System.String,System.Type,Telerik.Windows.Controls.InputGestureCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="inputGestures">The input gestures.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedCommand"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.CanExecute(System.Object,System.Windows.UIElement)">
            <summary>
            Determines whether this instance can execute the specified parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
            <returns>
            	<c>true</c> if this instance can execute the specified parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.Execute(System.Object,System.Windows.UIElement)">
            <summary>
            Executes the RoutedCommand on the current command target. 
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            True if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RoutedCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.InputGestures">
            <summary>
            Gets the collection of InputGesture objects that are associated with this command. 
            </summary>
            <value>The input gestures.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.Name">
            <summary>
            Gets the name of the command. 
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedCommand.OwnerType">
            <summary>
            Gets the type that is registered with the command. 
            </summary>
            <value>The type of the owner.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RoutedUICommand">
            <summary>
            Defines an ICommand that is routed through the element tree and contains a text property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor(System.String,System.String,System.Type,Telerik.Windows.Controls.InputGestureCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="inputGestures">The input gestures.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RoutedUICommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RoutedUICommand"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RoutedUICommand.Text">
            <summary>
            Gets or sets the text that describes this command. 
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1">
            <summary>
            Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed. 
            </summary>
            <typeparam name="T">The type of the dependency property that has changed.</typeparam>
        </member>
        <member name="M:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the RadRoutedPropertyChangedEventArgs class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.#ctor(`0,`0,Telerik.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the RadRoutedPropertyChangedEventArgs class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="P:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="P:Telerik.Windows.RadRoutedPropertyChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_SilverTheme">
            <summary>
            Office_SilverTheme class represents the key to the Office_Silver theme.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Theme">
            <summary>
            Contains the location of the Theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Theme"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Theme"/> class.
            </summary>
            <param name="source">The Uri from which to load the Theme resources.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.GetResource(System.String,System.Windows.DependencyObject)">
            <summary>
            Returns a resource with the specified key.
            </summary>
            <param name="key">The key of the resource to be returned.</param>
            <param name="element">
            DependencyObject from which to retrieve the value of the Theme attached property.
            If Theme is not set then we use the ApplicationTheUri.
            </param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.Apply(System.Windows.Controls.Control)">
            <summary>
            Tries to find a Style in the Theme resources and applies it on the specified element.
            </summary>
            <param name="element">FrameworkElement on which to apply the Theme Style.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.GetApplicationThemeSetter(System.Windows.DependencyObject)">
            <summary>
            Gets the ApplicationThemeSetter value.
            </summary>
            <param name="obj">The object from which to take the ApplicationThemeSetter value.</param>
            <returns>The ApplicationThemeSetter value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Theme.SetApplicationThemeSetter(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the ApplicationThemeSetter value.
            This method is used to allow application theming.
            </summary>
            <param name="obj">The object to which to Set the ApplicationThemeSetter value.
            This object should be the main System.Windows.ResourceDictionary in the generic.xaml file</param>
            <param name="value">Some dummy value that triggers resource replacement.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.Theme.ApplicationThemeSetterProperty">
            <summary>
            Identifies the ApplicationThemeSetter attached property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Theme.IsApplicationTheme">
            <summary>
            Gets or sets if the current Source is an Application Theme.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Theme.Source">
            <summary>
            Uri from which to load the Theme resources.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_SilverTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_SilverTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_BlackTheme">
            <summary>
            Office_BlackTheme class represents the key to the Office_Black theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_BlackTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_BlackTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Office_BlueTheme">
            <summary>
            Office_BlueTheme class represents the key to the Office_Blue theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Office_BlueTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Office_BlueTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SummerTheme">
            <summary>
            SummerTheme class represents the key to the Summer theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SummerTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SummerTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemableAttribute">
            <summary>
            This attribute marks Telerik controls that take advantage of 
            the Theme attached property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeConverter">
            <summary>
            This class is used by the design-time and XAML infrastructure to convert theme objects to strings and vice versa.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ThemeConverter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeLocation">
            <summary>
            This enumeration is used to distinguish between built-in and custom themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeLocation.BuiltIn">
            <summary>
            Represents a built-in theme developed by Telerik and hosted in the control assembly.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeLocation.External">
            <summary>
            Represents a theme hosted in an external assembly.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeLocationAttribute">
            <summary>
            The ThemeLocation attribute decorates a Theme class and carries information about where the theme is hosted.
            If a theme does not have that attribute, it is treated as an external theme by default.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeLocationAttribute.#ctor(Telerik.Windows.Controls.ThemeLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ThemeLocationAttribute"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ThemeLocationAttribute.Location">
            <summary>
            Gets the theme location type.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ThemeManager">
            <summary>
            This class supports the Telerik theming infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeManager.StandardThemes">
            <summary>
            Contains all standard themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ThemeManager.StandardThemeNames">
            <summary>
            Contains the names of all common themes - used for the QSF Theme dropdown and intellisense.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeManager.#cctor">
            <summary>
            Initializes the <see cref="T:Telerik.Windows.Controls.ThemeManager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ThemeManager.FromName(System.String)">
            <summary>
            Returns a standard theme with the specified name. Fallbacks to the default theme 
            if a standard theme was not found.
            </summary>
            <param name="themeName">Name of the theme.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Theming">
            <summary>
            Provides functionality for changing control themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Theming.ThemeProperty">
            <summary>
            Gets or sets the theme of a <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="value">The new theme to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to get the theme of.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Theming.SetThemeFromParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="parent">Parent that supplies the theme.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationExtensions.EnsureOpacityMask(Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext)">
            <summary>
            	Makes sure that the animated object has the needed opacity mask.
            </summary>
            <remarks>
            	<para>
            		Adds a vertical or horizontal opacity mask of the kind:
            	</para>
            	<![CDATA[
            	<LinearGradientBrush EndPoint="0 1">
            	    <LinearGradientBrush.RelativeTransform>
            	        <TranslateTransform Y="0" />
            	    </LinearGradientBrush.RelativeTransform>
            	    <GradientStop Offset="0" Color="Transparent" />
            	    <GradientStop Offset="0" Color="Black" />
            	    <GradientStop Offset="1" Color="Black" />
            	    <GradientStop Offset="1" Color="Transparent" />
            	</LinearGradientBrush>
            	]]>
            	</remarks>
            <param name="target">The object to set the mask for.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext">
            <summary>
            	A helper class, used for chain-creation and update of storyboards in a  jQuery way.
            </summary>
            <remarks>
            	The Result storybard is a collection of DoubleAnimationUsingKeyFrame collection.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.StartIndex">
            <summary>
            Gets or sets the starting index or the currently affected DoubleAnimation targets.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.EndIndex">
            <summary>
            Gets or sets the end index of the currently affected DoubleAnimation targets.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.Targets">
            <summary>
            Gets a collection of the elemetns that is currently being animated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.Instance">
            <summary>
            Gets or sets the resultant Storyboard for the AnimationContext.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationExtensions.AnimationContext.IsUpdate">
            <summary>
            Gets or sets a value idicating whether currently an animation is being created or updated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationGroup">
            <summary>
            Represents composite animation, used for declaratively creating composite animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationGroup.CreateAnimation(System.Windows.Controls.Control)">
            <summary>
            Calls <see cref="M:Telerik.Windows.Controls.Animation.AnimationGroup.CreateAnimation(System.Windows.Controls.Control)"/> for each of control 
            in <see cref="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children"/> collection.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationGroup.UpdateAnimation(System.Windows.Controls.Control,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates each child animation of <paramref name="storyboard"/> using according 
            animation for each child control in <see cref="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationGroup.Children">
            <summary>
            Gets a list of the children animation objects of this composite animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationManager">
            <summary>
            Static manager class used for dynamic animations of controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.AnimationSelectorProperty">
            <summary>
            Represents the AnimationSelector attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.IsAnimationEnabledProperty">
            <summary>
            Identifies the IsAnimationEnabled attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationManager.AnimationProperty">
            <summary>
            Identifies the Animation attached property.
            </summary>
            <remarks>
            	<para>
            		This property is used to bind the corresponding RadAnimation to a storyboard.
            	</para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.GetAnimationSelector(System.Windows.DependencyObject)">
            <summary>
            Gets the AnimationSelector for the given DependencyObject, normally a control.
            </summary>
            <param name="obj">The target animated object, normally a control.</param>
            <returns>The animation selector for the object.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.SetAnimationSelector(System.Windows.DependencyObject,Telerik.Windows.Controls.Animation.AnimationSelectorBase)">
            <summary>
            Sets the Animation selector for the given DependencyObject, normally a Control.
            </summary>
            <param name="obj">The target animated object, normally a cotnrol.</param>
            <param name="value">The AnimationSelector to assign.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.GetIsAnimationEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets a value idicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <returns>True if animation is enabled, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.SetIsAnimationEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value idicating whether animation is enabled for the given Control.
            </summary>
            <param name="obj">The dependency object for which to check the value, normally a control.</param>
            <param name="value">True if animation should be enabled, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Stop(System.Windows.FrameworkElement,System.String)">
            <summary>
            Stops an animation if it is currently active or filling.
            </summary>
            <param name="target">The control to stop the animation for.</param>
            <param name="animationName">The name of the animation to stop.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.Controls.Control,System.String)">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationManager.Play(System.Windows.Controls.Control,System.String,System.Action,System.Object[])">
            <summary>
            Plays an animation for the given control and invokes the callback on completion.
            </summary>
            <param name="target">The control for which to play the animation.</param>
            <param name="animationName">The name of the animation.</param>
            <param name="completeCallback">The callback to be called. The callback is always called.</param>
            <param name="args">Optional oarameters for the animation, can be provided by the control.</param>
            <returns>True if an aimation actually played, false otherwise.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationManager.IsGlobalAnimationEnabled">
            <summary>
            Gets or sets a value idicating whether the Animation for the whole application will be enabled. 
            This value overrides all other properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationManager.AnimationSpeedRatio">
            <summary>
            Gets or sets the global animation speed ration that will be used if no local speed ratio is set.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationSelectorBase">
            <summary>
            Base class for selecting DynamicAnimations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelectorBase.SelectAnimation(System.Windows.Controls.Control,System.String)">
            <summary>
            	<para>
            		When overriden in derived classes, it selects an animation for the specific
            		control and reason.
            	</para>
            </summary>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The reason for the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationSelector">
            <summary>
            Animation Selector, used for easier definition of animations in xaml.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelector.#ctor">
            <summary>
            Initializes a new instance of the AnimationSelector class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.AnimationSelector.SelectAnimation(System.Windows.Controls.Control,System.String)">
            <summary>
            Selects an animation based on its AnimationName.
            </summary>
            <remarks>
            	<para>
            		The AnimationSelector will return the animation with matching name from
            		its <strong>Animations</strong> list.
            	</para>
            </remarks>
            <param name="control">The control the animation is needed for.</param>
            <param name="name">The name of the animation. Often it is a change of state, result of a user action.</param>
            <returns>The RadAnimation object.</returns>
            <seealso cref="P:Telerik.Windows.Controls.Animation.AnimationSelector.Animations"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.AnimationSelector.Animations">
            <summary>
            Gets the list of animations in that this selector will choose from.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.SlideAnimation">
            <summary>
            Slide animation for showing/hiding popups.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.SlideAnimation.CreateAnimation(System.Windows.Controls.Control)">
            <summary>
            Creates the slide animation.
            </summary>
            <param name="control">The control for which the animation is needed.</param>
            <returns>The newly created animation.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Animation.SlideAnimation.UpdateAnimation(System.Windows.Controls.Control,System.Windows.Media.Animation.Storyboard,System.Object[])">
            <summary>
            Updates the slide animation.
            </summary>
            <param name="control">The control for which the animation needs to be updated.</param>
            <param name="storyboard">Storyvoard that needs to be updated.</param>
            <param name="args"></param>
            <remarks>
            Currently the method sets the SpeedRatio of the storyboard to
            the global <strong>AnimationSpeedRatio</strong> if the local SpeedRatio is null.
            If the local SpeedRatio value is set, it will be used.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.Direction">
            <summary>
            Gets or sets a value of whether the animated object is sliding in or out of view.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.SlideMode">
            <summary>
            Gets or sets the direction (side) that the object will appear from or slide out to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Animation.SlideAnimation.TargetName">
            <summary>
            Gets or sets the name of the animated object, part of the ControlTemplate of the control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.AnimationDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationDirection.In">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.AnimationDirection.Out">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.SlideMode">
            <summary>
            Represents sliding mode for animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SlideMode.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Animation.SlideMode.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.VistaTheme">
            <summary>
            VistaTheme class represents the key to the Vista theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.VistaTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.VistaTheme"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Animation.Spline">
            <summary>
            Helper class, used for creating animations in code.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.BooleanToVisibilityConverter">
            <summary>
            Represents the converter that converts Boolean values to and from Visibility enumeration values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ContainerBinding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ContainerBinding.ContainerBindingsProperty">
            <summary>
            Identifies the ContainerBindings dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ContainerBinding.GetContainerBindings(System.Windows.DependencyObject)">
            <summary>
            Gets the container bindings from the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ContainerBinding.SetContainerBindings(System.Windows.DependencyObject,Telerik.Windows.Controls.ContainerBindingCollection)">
            <summary>
            Sets the container bindings on the specified element.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The container bindings to be set.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ContainerBinding.PropertyName">
            <summary>
            Gets or sets the name of the property of the item container, that will have the Binding applied to.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ContainerBinding.Binding">
            <summary>
            Gets or sets the binding that will be applied on the container property with name PropertyName.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ContainerBindingCollection">
            <summary>
            Represents an observable collection of ContainerBinding objects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ILocalizable">
            <summary>
            All elements with sophisticated localization machanizm have to implement this interface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ILocalizable.SetString(System.String)">
            <summary>
            A method to supply element with the localized data.
            </summary>
            <param name="localizedValue"></param>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`3">
            <summary>
            Request for an action that takes two parameters.
            </summary>
            <typeparam name="T1">The first parameter's type.</typeparam>
            <typeparam name="T2">The second parameter's type.</typeparam>
            <typeparam name="T3">The third parameter's type.</typeparam>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredActionBase">
            <summary>
            Base class for delayed action calls.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredActionBase.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`3.#ctor(System.Action{`0,`1,`2},`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
            <param name="parameter2">The second parameter.</param>
            <param name="parameter3">The third parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`3.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`2">
            <summary>
            Request for an action that takes two parameters.
            </summary>
            <typeparam name="T1">The first parameter.</typeparam>
            <typeparam name="T2">The second parameter.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`2.#ctor(System.Action{`0,`1},`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
            <param name="parameter2">The second parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`2.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction`1">
            <summary>
            Request for an action that takes one parameter.
            </summary>
            <typeparam name="T">The first parameter.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`1.#ctor(System.Action{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="parameter1">The first parameter.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction`1.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.AttachPopupToVisualTree(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Attaches the popup to visual tree.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.RemovePopupFromVisualTree(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Removes the popup from visual tree.
            </summary>
            <param name="popup">The popup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HACKS.RemoveParent(System.Windows.FrameworkElement)">
            <summary>
            Removes a framework element from the VisualTree.
            </summary>
            <param name="child">The element to remove.</param>
            <returns>true if successful; false if not.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBoxItemAutomationPeer">
            <summary>
            Represents a selectable item in a ListBox.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemAutomationPeer.#ctor(Telerik.Windows.Controls.ListBoxItem)">
            <summary>
            Initializes a new instance of the ListBoxItemAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemAutomationPeer.ScrollIntoView">
            <summary>
            Implementation of IScrollItemProvider.ScrollIntoView().
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.LocalizationManager">
            <summary>
            A localization manager class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LocalizationManager.ResourceKeyProperty">
            <summary>
            Identifies the ResourceKey attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetString(System.String)">
            <summary>
            Returns a string related to the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetResourceKey(System.Windows.DependencyObject)">
            <summary>
            Returns the value of the ResourceKey property related to the specified object.
            </summary>
            <param name="element">The item to check.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.SetResourceKey(System.Windows.DependencyObject,System.String)">
            <summary>
            Set the value of the ResourceKey property related to the specified object.
            </summary>
            <param name="element">The item to be initialized.</param>
            <param name="value">The supplyed value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LocalizationManager.GetStringOverride(System.String)">
            <summary>
            Returns a string related to the specified key and culture.
            </summary>
            <param name="key">The key.</param>
            <returns>A value relative to the specified key.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.Manager">
            <summary>
            Holder of the only posibble Localization Manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.DefaultCulture">
            <summary>
            Default culture to follow if the specific one is null.
            This is an easy way to override the culture without instantiating a new manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.DefaultResourceManager">
            <summary>
            Default resource manager to follow if the specific one is null.
            This is an easy way to override the resource manager without instantiating a new manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.ResourceManager">
            <summary>
            Gets or sets specific resource manager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LocalizationManager.Culture">
            <summary>
            A specific culture to follow.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ResourceParser">
            <summary>
            Parse streams containing theme resources.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.OldXamlNamespace">
            <summary>
            The default old XAML namespace.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.NewXamlNamespace">
            <summary>
            The default new XAML namespace.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.StyleXaml">
            <summary>
            The XAML markup for an empty Style declaration.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceParser.StyleXamlWithPrefix">
            <summary>
            The XAML markup for an empty Style declaration with a TargetType
            using an XML prefix.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.Parse(System.IO.Stream,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieves a resource dictionary from an input stream.
            </summary>
            <param name="stream">
            A stream containing the XAML for a  resource dictionary.
            </param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
            <returns>A resource dictionary.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.IsXamlElement``1(System.String,System.String)">
            <summary>
            Determines whether an XML element is a type in the core Silverlight
            namespace.
            </summary>
            <typeparam name="T">The type to check for.</typeparam>
            <param name="name">The name of the element.</param>
            <param name="ns">The namespace of the element.</param>
            <returns>
            A value indicating whether an the element is the Silverlight type.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.ParseResources(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Transform a ResourceDictionary defined in the reader into a
            ContentControl in the writer and nest all of its resources in
            ContentControl.Resources.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.ParseElement(System.Xml.XmlReader,System.Xml.XmlWriter,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Process an element's opening tag.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <param name="writer">Writer with the transformed resources.</param>
            <param name="checkTypes">
            A value indicating whether styles in the resource dictionary should
            be filtered to types that have been loaded by the application.
            </param>
            <param name="keys">Collection that will be populated with all key attributes from the parsed XAML.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceParser.IsStyleOrControlTemplateTargetTypeLoaded(System.Xml.XmlReader)">
            <summary>
            Determine if the current element in the reader represents a Style or ControlTemplate
            whose TargetType has been loaded in the assembly.
            </summary>
            <param name="reader">Reader with the resources.</param>
            <returns>
            A value indicating whether the element is not a (Style or ControlTemplate) or it is a
            (Style or ControlTemplate) with a TargetType loaded in this assembly.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectorAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorAutomationPeer.#ctor(Telerik.Windows.Controls.Selector)">
            <summary>
            Initializes a new instance of the SelectorAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorAutomationPeer.GetSelection">
            <summary>
            ISelectionProvider implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern that is associated with this AutomationPeer.
            </summary>
            <param name="patternInterface">One of the enumeration values that indicates the control pattern.</param>
            <returns>The object that implements the pattern interface, or null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectorAutomationPeer.CanSelectMultiple">
            <summary>
            ISelectionProvider implementation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectorAutomationPeer.IsSelectionRequired">
            <summary>
            ISelectionProvider implementation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.StyleManager">
            <summary>
            Provides functionality for changing control themes.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.StyleManager.ThemeProperty">
            <summary>
            Identifies the Theme attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to get the theme of.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="value">The new theme to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleManager.SetThemeFromParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the theme of the specified <see cref="T:System.Windows.DependencyObject"/>.
            </summary>
            <param name="element">The element to set the theme of.</param>
            <param name="parent">Parent that supplies the theme.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.StyleManager.ApplicationTheme">
            <summary>
            Specifies a Theme that will be automatically applied on all controls in the application. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Common.IMouseEventArgs">
            <summary>
            Abstracts the mouse event args to allow easier testing of mouse-related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Common.IMouseButtonEventArgs">
            <summary>
            Abstracts the mouse event args to allow easier testing of mouse-related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FilteringMode">
            <summary>
            Specifies the FilteringMode of RadComboBox.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.None">
            <summary>
            Filtering disabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.Contains">
            <summary>
            Matches items, containing the search text.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.FilteringMode.StartsWith">
            <summary>
            Matches items, which text starts with the search text.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.GeneratorStatus">
            <summary>
            Used by <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> to indicate the status of its item generation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
            <summary>
            The generator has not tried to generate content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
            <summary>
            The generator is generating containers.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
            <summary>
            The generator has finished generating containers. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.GeneratorStatus.Error">
            <summary>
            The generator has finished generating containers, but encountered one or more errors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FrameworkElementExtensions.IsAncestorOf(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Recursively searches the parents of the given element and checks whether the target is one of them.
            </summary>
            <returns>True if the target is one of the elements.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.FrameworkElementExtensions.GetFirstDescendantOfType``1(System.Windows.DependencyObject)">
            <summary>
                Does a deep search of the element tree, trying to find a descendant of the given type 
                (including the element itself).
            </summary>
            <returns>True if the target is one of the elements.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBoxItem">
            <summary>
            Represents a selectable item in a ListBox.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnSelected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Called when the ListBoxItem is selected in a ListBox.
            </summary>
            <param name="e">The event data.</param>
            <remarks>
            This method is called when the IsSelected property changes to true.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnUnselected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Called when the ListBoxItem is unselected in a ListBox.
            </summary>
            <param name="e">The event data.</param>
            <remarks>
            This method is called when the IsSelected property changes to false.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the user presses the left mouse button over the ListBoxItem. 
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ListBoxItem.Selected">
            <summary>
            Occurs when a ListBoxItem is selected.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.ListBoxItem.Unselected">
            <summary>
            Occurs when a ListBoxItem is unselected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItem.IsSelected">
            <summary>
            Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.NullableEnumConverter`1">
            <summary>
            Type converter for nullable enum types.
            </summary>
            <typeparam name="T">The type of the enum the type converter is intended for.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableEnumConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance can convert from the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>
            	<c>true</c> if this instance can convert from the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NullableEnumConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the type of this converter.
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangedEventArgs">
            <summary>
            Provides data for the Telerik.Windows.Controls.Selector.SelectionChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChangedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the SelectionChangedEventArgs class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="removedItems">The items that were unselected.</param>
            <param name="addedItems">The items that were selected.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
            <value>
            The items that were selected in this event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected. 
            </summary>
            <value>
            The items that were unselected in this event.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemsControlExtensions">
            <summary>
            Contains helper extension methods for the ItemsControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControlExtensions.ForEachContainerItem``1(Telerik.Windows.Controls.ItemsControl,System.Action{``0})">
            <summary>
                Executes the given action on each container item of the control.
            </summary>
            <typeparam name="T">The type of container expected, depends on the ItemControl calss.</typeparam>
            <param name="itemsControl">The ItemsControl instance.</param>
            <param name="work">The action to execute on the items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemsControlExtensions.GetItemsPanel(System.Windows.DependencyObject)">
            <summary>
            Gets the items panel from the visual tree of the control.
            </summary>
            <param name="itemsControl">The items control, which panel will be returned.</param>
            <returns>The <see cref="T:System.Windows.Controls.Panel"/> which will arrange the items.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemContainerGenerator">
            <summary>
                Base class for all the items controls.
            </summary>
            TODO: Add summary/seeaslsos
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.#ctor(Telerik.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> class.
            </summary>
            <param name="itemsControl">The items control.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
            <summary>
                Returns the container for the given item index.
            </summary>
            <param name="index">The index of the item.</param>
            <returns>The container for the item at the given index.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
            <summary>
                Returns the container for the given item of the ItemsControl.
            </summary>
            <param name="item">The item for which ti finds the container.</param>
            <returns>Returns null if not found.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the item for the given container.
            </summary>
            <param name="container">The container for which to get an item.</param>
            <returns>Returns the item for the container.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
            <summary>
                Returns the index of the given container.
            </summary>
            <param name="container">The container for which to get the index.</param>
            <returns>The index of the container.</returns>
        </member>
        <member name="E:Telerik.Windows.Controls.ItemContainerGenerator.StatusChanged">
            <summary>
            The StatusChanged event is raised by a <see cref="T:Telerik.Windows.Controls.ItemContainerGenerator"/> to inform controls that its status has changed. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemContainerGenerator.Status">
            <summary>
            The generation status of the ItemContainerGenerator.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.LayoutTransformControl">
            <summary>
            Represents a control that applies a layout transformation to its Content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RootVisualTemplatePartName">
            <summary>
            Name of the TransformRoot template part.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ContentPresenterTemplatePartName">
            <summary>
            Name of the Presenter template part.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.AcceptableDelta">
            <summary>
            Acceptable difference between two doubles.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RoundPrecision">
            <summary>
            Number of decimals to round the Matrix to.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._transformationPanel">
            <summary>
            Root element for performing transformations.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._contentPresenter">
            <summary>
            ContentPresenter element for displaying the content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to _transformationPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._transformation">
            <summary>
            Transformation matrix corresponding to _matrixTransform.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.LayoutTransformControl._childActualSize">
            <summary>
            Actual DesiredSize of Child element (the value it returned from its MeasureOverride method).
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformer class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the LayoutTransformer control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">Source of the change.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ApplyLayoutTransform">
            <summary>
            Applies the layout transform on the LayoutTransformer control content.
            </summary>
            <remarks>
            Only used in advanced scenarios (like animating the LayoutTransform). 
            Should be used to notify the LayoutTransformer control that some aspect 
            of its Transform property has changed. 
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.GetTransformMatrix(System.Windows.Media.Transform)">
            <summary>
            Walks the Transform(Group) and returns the corresponding Matrix.
            </summary>
            <param name="transform">Transform(Group) to walk.</param>
            <returns>Computed Matrix.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.ComputeLargestTransformedSize(System.Windows.Size)">
            <summary>
            Compute the largest usable size (greatest area) after applying the transformation to the specified bounds.
            </summary>
            <param name="arrangeBounds">Arrange bounds.</param>
            <returns>Largest Size possible.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.IsSizeSmaller(System.Windows.Size,System.Windows.Size)">
            <summary>
            Returns true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">Second Size.</param>
            <param name="b">First Size.</param>
            <returns>True if Size a is smaller than Size b in either dimension.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RoundMatrix(System.Windows.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a Matrix to avoid issues due to floating point imprecision.
            </summary>
            <param name="matrix">Matrix to round.</param>
            <param name="decimals">Number of decimal places to round to.</param>
            <returns>Rounded Matrix.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.RectTransform(System.Windows.Rect,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Rect.Transform on Silverlight.
            </summary>
            <param name="rect">Rect to transform.</param>
            <param name="matrix">Matrix to transform with.</param>
            <returns>Bounding box of transformed Rect.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MatrixMultiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.Multiply on Silverlight.
            </summary>
            <param name="matrix1">First matrix.</param>
            <param name="matrix2">Second matrix.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.LayoutTransformControl.MatrixHasInverse(System.Windows.Media.Matrix)">
            <summary>
            Implements WPF's Matrix.HasInverse on Silverlight.
            </summary>
            <param name="matrix">Matrix to check for inverse.</param>
            <returns>True if the Matrix has an inverse.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.LayoutTransformControl.LayoutTransform">
            <summary>
            Gets or sets the layout transform to apply on the LayoutTransformer 
            control content.
            </summary>
            <remarks>
            Corresponds to UIElement.LayoutTransform.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.LayoutTransformControl.Child">
            <summary>
            Gets the child element being transformed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadControl">
            <summary>
            Static container for the Theme attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadControl.ThemeProperty">
            <summary>
            Identifies the Theme attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadControl.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Theme attached property from a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>The value of the Theme attached property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadControl.SetTheme(System.Windows.DependencyObject,Telerik.Windows.Controls.Theme)">
            <summary>
            Sets the value of the Theme attached property to a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadControl.IsInDesignMode">
            <summary>
            Gets whether a control is running in the context of a designer.
            </summary>
            <value>
            	<c>True</c> if this instance is in design mode; otherwise, <c>False</c>.
            </value>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceStorage.generics">
            <summary>
            Used for caching default generic.xaml for all assemblies.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.End">
            <summary>
            Commit selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Begin">
            <summary>
            Begin tracking selection changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Cancel">
            <summary>
            Cancels the currently active SelectionChanger.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Select(`0)">
            <summary>
            Queue something to be added to the selection.
            Does nothing if the item is already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.Unselect(`0)">
            <summary>
            Queue something to be removed from the selection.
            Does nothing if the item is not already selected.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.SelectJustThisItem(`0)">
            <summary>
            Select just this item; all other items in Selection will be removed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChanger`1.SynchronizeInternalSelection">
            <summary>
            Update the InternalSelection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChanger`1.CoerceItemCallback">
            <summary>
            Coerce Item before it is selected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChanger`1.IsActive">
            <summary>
            True if there is a SelectionChange currently in progress.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DataTemplateSelector">
            <summary>
            Provides a way to choose a DataTemplate based on the data object and the data-bound element.
            </summary>
            <remarks>
            <para>
            Typically, you create a DataTemplateSelector when you have more than one DataTemplate for the same type of objects and you want to supply your own logic to choose a DataTemplate to apply based on the properties of each data object.
            </para>
            <para>
            To create a template selector, create a class that inherits from DataTemplateSelector and override the SelectTemplate method. Once your class is defined you can assign an instance of the class to the template selector property of your element.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a DataTemplate based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.HeaderedContentControl">
            <summary>
                Base class for the content controls that need a header.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
            <summary>
                Identifies the HasHeader property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
                Identifies the Header property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
                Identifies the HeaderTemplatee property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedContentControl.IsFocusedProperty">
            <summary>
            Identifies the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the HeaderedContentControl class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.ChangeVisualState">
            <summary>
            Changes the visual state of the control using transitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnIsEnabledChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsEnabled property of the control changes.
            </summary>
            <param name="e">The information about the new and old value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
                Allows derived classes to act on header change.
            </summary>
            <param name="oldHeader">The old header value.</param>
            <param name="newHeader">The new header value.</param>
            <seealso cref="P:Telerik.Windows.Controls.HeaderedContentControl.Header"/>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
                Allows derived classes to act on HeaderTemplate change.
            </summary>
            <param name="oldHeaderTemplate">The old header tempalte.</param>
            <param name="newHeaderTemplate">The new header tempalte.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnIsFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">Event args with the old and the new value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedContentControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HasHeader">
            <summary>
                Gets whether there is header assigned. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.IsFocused">
            <summary>
            	Gets a value indicating whether the control is focused.
            </summary>
            <remarks>
            	<para>
                    Please note that <strong>IsFocused</strong> is a read only property. 
                    To focus the Control, use the <see cref="M:System.Windows.Controls.Control.Focus"/> method.
                </para> 
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.Header">
            <summary>
                Gets or sets the header of the control. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
                Gets or sets the data tempalte for the header. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
            <summary>
            Gets or sets a selector for the HeaderTemplate. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.HeaderedItemsControl">
            <summary>
            Represents a control that contains multiple items and has a header.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
            <summary>
            Identifies the HasHeader dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
            <summary>
            Identifies the HeaderTemplateSelector dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.HeaderedItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the Header property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeader">The old value of the Header property.</param>
            <param name="newHeader">The new value of the Header property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the HeaderTemplate property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeaderTemplate">The old value of the HeaderTemplate property.</param>
            <param name="newHeaderTemplate">The new value of the HeaderTemplate property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(Telerik.Windows.Controls.DataTemplateSelector,Telerik.Windows.Controls.DataTemplateSelector)">
            <summary>
            Called when the HeaderTemplateSelector property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeaderTemplateSelector">The old value of the HeaderTemplateSelector property.</param>
            <param name="newHeaderTemplateSelector">The new value of the HeaderTemplateSelector property.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HasHeader">
            <summary>
            Gets a value that indicates whether this HeaderedItemsControl has a header. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the item that labels the control. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets the template used to display the contents of the control's header. This is a dependency property. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
            <summary>
            Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.HeaderIsItem">
            <summary>
            The header is the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.HeaderIsNotLogical">
            <summary>
            The header is not a logical item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.ItemsSourceSet">
            <summary>
            The items source has been set.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.ItemTemplateSelectorSet">
            <summary>
            The item template selector was set.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HeaderedItemsControl.BoolField.ItemTemplateSet">
            <summary>
            The item template property has been set.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.HierarchicalDataTemplate">
            <summary>
            Represents a DataTemplate that supports HeaderedItemsControl, such as RadTreeViewItem or RadMenuItem.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.HierarchicalDataTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.HierarchicalDataTemplate"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the binding for this data template, which indicates where to 
            find the collection that represents the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate to apply to the ItemTemplate property on a 
            generated HeaderedItemsControl (such as a RadMenuItem or a RadTreeViewItem), to 
            indicate how to display items from the next level in the data hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.HierarchicalDataTemplate.ItemTemplateSelector">
            <summary>
            Gets or sets the DataTemplateSelector to apply to the ItemTemplateSelector 
            property on a generated HeaderedItemsControl (such as a RadMenuItem or a 
            RadTreeViewItem), to indicate how to select a template to display items from 
            the next level in the data hierarchy.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSelectionChangedEventArgs">
            <summary>
                Provides data for the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelectionChangedEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
            <summary>
                Initializes a new instance of the RadSelectionChangedEventArgs class.
            </summary>
            <param name="id">The event identifier (ID).</param>
            <param name="removedItems">The items that were unselected during this event.</param>
            <param name="addedItems">The items that were selected during this event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelectionChangedEventArgs.AddedItems">
            <summary>
                Gets the items that were selected since the last time the System.Windows.Controls.Primitives.Selector.SelectionChanged
                event occurred.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelectionChangedEventArgs.RemovedItems">
            <summary>
                Gets the items that were unselected since the last time the System.Windows.Controls.Primitives.Selector.SelectionChanged
                event occurred.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ResourceDictionary">
            <summary>
            Provides a source for loading ResourceDictionary objects and merging them with
            another ResourceDictionary.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ResourceDictionary.MergedDictionariesProperty">
            <summary>
            Identifies the MergedDictionaries attached property.
            </summary>		
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceDictionary.GetMergedDictionaries(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the MergedDictionaries attached property from a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>The value of the MergedDictionaries attached property.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ResourceDictionary.SetMergedDictionaries(System.Windows.DependencyObject,Telerik.Windows.Controls.ResourceDictionary)">
            <summary>
            Sets the value of the MergedDictionaries attached property to a given DependencyObject.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ResourceDictionary.Keys">
            <summary>
            Comma separated string, containing all resource keys that need to 
            be merged into the parent ResourceDictionary.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ResourceDictionary.Source">
            <summary>
            Uri from which to load the ResourceDictionary resources.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionMode">
            <summary>
            Defines the selection behavior for various controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Single">
            <summary>
            The user can select only one item at a time. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Multiple">
            <summary>
            The user can select multiple items without holding down a modifier key.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectionMode.Extended">
            <summary>
            The user can select multiple consecutive items while holding down the SHIFT key.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectionChanged routed event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SizeExtensions">
            <summary>
            Helper TabStrip extensions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SizeExtensions.Round(System.Windows.Size)">
            <summary>
            Returns the rounded equivalent of the given size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SizeExtensions.Swap(System.Windows.Size)">
            <summary>
            Returns a new size with its width and height swapped.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.StyleSelector">
            <summary>
            Chooses the style for each item of the ItemsControl.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
                When overriden this method is used for determining the Style of items.
            </summary>
            <param name="item">The item for whoose container is wanted.</param>
            <param name="container">The container for which a Style is selected.</param>
            <returns>The Style for the given container.</returns>
        </member>
        <member name="T:Telerik.Windows.CoerceValueCallback">
            <summary>
            Gets or sets a reference to a CoerceValueCallback implementation specified in this metadata.
            </summary>
            <param name="element">
            The object that the property exists on. When the callback is invoked, the property system will pass this value.
            </param>
            <param name="baseValue">The new value of the property, prior to any coercion attempt.</param>
            <returns>The coerced value (with appropriate type).</returns>
        </member>
        <member name="T:Telerik.Windows.DependencyObjectExtensions">
            <exclude />
            <excludeToc />
            <summary>
            Static class that contains extension methods for the Dependency object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.AddHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate,System.Boolean)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">A reference to the handler implementation.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handlesToo">True to register the handler such that it is invoked even when the routed event is marked handled in its event data; false to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.AddHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.
            </summary>
            <param name="element">The element.</param>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.RemoveHandler(System.Windows.DependencyObject,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Removes the specified routed event handler from this element.
            </summary>
            <param name="element">The element.</param>
            <param name="routedEvent">The identifier of the routed event for which the handler is attached.</param>
            <param name="handler">The specific handler implementation to remove from the event handler collection on this element.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.RaiseEvent(System.Windows.DependencyObject,Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Raises a specific routed event. The RoutedEvent to be raised is identified within 
            the RoutedEventArgs instance that is provided (as the RoutedEvent property of that event data).
            </summary>
            <param name="element">The element.</param>
            <param name="e">
            The <see cref="T:Telerik.Windows.RadRoutedEventArgs"/> instance containing the event data
            and also identifies the event to raise.
            </param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.SetValue(System.Windows.DependencyObject,Telerik.Windows.DependencyPropertyKey,System.Object)">
            <summary>
            Set value to the read only property.
            </summary>
            <param name="element">The element to set the value to.</param>
            <param name="key">The read-only property key.</param>
            <param name="value">The value to set to the property.</param>
        </member>
        <member name="M:Telerik.Windows.DependencyObjectExtensions.ClearValue(System.Windows.DependencyObject,Telerik.Windows.DependencyPropertyKey)">
            <summary>
            Clears the value to the read only property.
            </summary>
            <param name="element">The element to clear the value to.</param>
            <param name="key">The read-only property key.</param>
        </member>
        <member name="T:Telerik.Windows.DependencyPropertyExtensions">
            <summary>
            Contains utility methods for registering dependency properties with extended metadata.
            </summary>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
            <summary>
            Registers a dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="metadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="metadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
            <summary>
            Registers an attached property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="metadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="M:Telerik.Windows.DependencyPropertyExtensions.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only attached property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="metadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="T:Telerik.Windows.DependencyPropertyKey">
            <summary>
            Provides a dependency property identifier for limited write access to a read-only dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.DependencyPropertyKey.DependencyProperty">
            <summary>
            Gets the dependency property identifier associated with this specialized
            read-only dependency property identifier.
            </summary>
        </member>
        <member name="T:Telerik.Windows.EventManager">
            <summary>
            Provides event-related utility methods that register routed events for class owners and add class handlers. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterClassHandler(System.Type,Telerik.Windows.RoutedEvent,System.Delegate)">
            <summary>
            Registers a class handler for a particular routed event.
            </summary>
            <param name="classType"></param>
            <param name="routedEvent"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterClassHandler(System.Type,Telerik.Windows.RoutedEvent,System.Delegate,System.Boolean)">
            <summary>
            Registers a class handler for a particular routed event, with the 
            option to handle events where event data is already marked handled.
            </summary>
            <param name="classType">The type of the class that is declaring class handling.</param>
            <param name="routedEvent">The routed event identifier of the event to handle.</param>
            <param name="handler">A reference to the class handler implementation.</param>
            <param name="handledEventsToo">
            True to invoke this class handler even if arguments of the routed event 
            have been marked as handled; false to retain the default behavior of not 
            invoking the handler on any marked-handled event.
            </param>
        </member>
        <member name="M:Telerik.Windows.EventManager.RegisterRoutedEvent(System.String,Telerik.Windows.RoutingStrategy,System.Type,System.Type)">
            <summary>
            Registers a new routed event with the Silverlight event system. 
            </summary>
            <param name="name">
            The name of the routed event. The name must be unique within the owner type 
            and cannot be null (Nothing in Visual Basic) or an empty string.
            </param>
            <param name="routingStrategy">
            The routing strategy of the event as a value of the enumeration.
            </param>
            <param name="handlerType">
            The type of the event handler. This must be a delegate type and cannot be 
            null (Nothing in Visual Basic).
            </param>
            <param name="ownerType">
            The owner class type of the routed event. This cannot be null (Nothing in Visual Basic).
            </param>
            <returns>
            The identifier for the newly registered routed event. This identifier object can 
            now be stored as a static field in a class and then used as a parameter for methods 
            that attach handlers to the event. The routed event identifier is also used 
            for other event system APIs.
            </returns>
        </member>
        <member name="T:Telerik.Windows.RadRoutedEventHandler">
            <summary>
            Represents the delegate for handlers that receive routed events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.RoutedEvent">
            <summary>
            Represents and identifies a routed event and declares its characteristics.
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutedEvent.LogicalParentProperty">
            <summary>
            Identifies the LogicalParent attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.GetLogicalParent(System.Windows.DependencyObject)">
            <summary>
            Gets the logical parent of the specified element. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.SetLogicalParent(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the logical parent of the specified element. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.AddOwner(System.Type)">
            <summary>
            Associates another owner class with this routed event, and enables routing 
            of the event and handling on this class.
            </summary>
            <param name="ownerType">The type of the class where the routed event is added.</param>
            <returns>
            The identifier field for the event. This return value should be used 
            to set a public static read-only field that will store the identifier 
            for the representation of the routed event on the owning class. This 
            field must be accessible because it will be required to attach any 
            instance handlers for the event when using the AddHandler utility method.
            </returns>
        </member>
        <member name="M:Telerik.Windows.RoutedEvent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.HandlerType">
            <summary>
            Gets the handler type of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.Name">
            <summary>
            Gets the identifying name of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.OwnerType">
            <summary>
            Gets the registered owner type of the routed event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.RoutedEvent.RoutingStrategy">
            <summary>
            Gets the routing strategy of the routed event. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.RoutingStrategy">
            <summary>
            Indicates the routing strategy of a routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Tunnel">
            <summary>
            The routed event uses a tunneling strategy, where the event instance 
            routes downwards through the tree, from root to source element. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Bubble">
            <summary>
            The routed event uses a bubbling strategy, where the event instance 
            routes upwards through the tree, from event source to root. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.RoutingStrategy.Direct">
            <summary>
            The routed event does not route through an element tree, but does support 
            other routed event capabilities such as class handling, EventTrigger or EventSetter. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.TextClipper">
            <summary>
            A Content Control that clips its text when needed.
            </summary>
            <remarks>
                <para>
                    The TextClipper control is not intended to be used on its own but as part of other controls.
                </para>
                <para>
                    If a non-text content is set, the control works as a standard ContentControl.
                </para>
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.isTextBlockOutdated">
            <summary>
            Indicates whether the reference to the TextBlock is outdated and needs to be refreshed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.isClippingActive">
            <summary>
            Indicates if any text has actually been abbreviates.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.realText">
            <summary>
            The unchanged text, same as the content property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.textBlock">
            <summary>
            The TextBlock whoose content is changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.clipStart">
            <summary>
            The index of the first character that has been removed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.indexWidths">
            <summary>
            The width of the TextBlock with the given number of visible characters (0 -> TextLength - 1).
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.currentWidth">
            <summary>
            The current width of the textBlock, including trailing characters.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.justUpdated">
            <summary>
            Indicates whether the Textblock has just been updated, used to avoid layout cycles.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.realDesiredWidth">
            <summary>
            The desired width of the unconstrained, unabbreviated textblock.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.dotsWidth">
            <summary>
            The width of the trailing characters.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.TextClipper.fakeBuilder">
            <summary>
            The textBuilder for the fake (abbreviated) text.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.TextClipper"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to 
            define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can 
            be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object 
            allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.TextClipper.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method 
            to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself 
            and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.TextSearch">
            <summary>
            Enables a user to quickly access items in a set by typing prefixes of strings.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearch.TextPathProperty">
            <summary>
            Identifies the TextPath attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TextSearch.TextProperty">
            <summary>
            Identifies the Text attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
            <summary>
            Returns the string to that identifies the specified item.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The string that identifies the specified item.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
            <summary>
            Writes the Text attached property to the specified element.
            </summary>
            <param name="element">The element to which the property value is written.</param>
            <param name="value">The string that identifies the item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
            <summary>
            Returns the name of the property that identifies an item in the specified element's collection.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The name of the property that identifies the item to the user.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
            <summary>
            Writes the TextPath attached property to the specified element.
            </summary>
            <param name="element">The element to which the property value is written.</param>
            <param name="value">The name of the property that identifies an item.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.UIElementExtensions">
            <summary>
            Contains helper extension methods for the UIElement class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UIElementExtensions.ParentOfType``1(System.Windows.UIElement)">
            <summary>
            Gets the parent element from the visual tree by given type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UIElementExtensions.ChildrenOfType``1(System.Windows.UIElement)">
            <summary>
            Gets all child elements recursively from the visual tree by given type.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.VisualTreeHelperExtensions.GetParent``1(System.Windows.DependencyObject)">
            <summary>  
            This recurses the visual tree for a parent of a specific type.
            </summary>  
            <param name="child"></param>  
        </member>
        <member name="M:Telerik.Windows.Controls.VisualTreeHelperExtensions.GetAncestors``1(System.Windows.DependencyObject)">
            <summary>  
            This recurses the visual tree for ancestors of a specific type.
            </summary>  
            <param name="target">The element to get ancestor of.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.VisualTreeHelperExtensions.GetChildren``1(System.Windows.DependencyObject)">
            <summary>
            This recurses the visual tree for children of a specific type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
            <remarks>
            	<para>
            		More info here:
            		http://blogs.msdn.com/delay/archive/2009/03/09/controls-are-like-diapers-you-don-t-want-a-leaky-one-implementing-the-weakevent-pattern-on-silverlight-with-the-weakeventlistener-class.aspx
            		
            		How to use:
            	</para>
            	<code lang='CS'>
            		<![CDATA[
            		// It does; create a WeakEventListener, attach us to it, and add it to the event
                   _weakEventListener = new WeakEventListener<FixedControl, object, NotifyCollectionChangedEventArgs>(this);
                   _weakEventListener.OnEventAction = (instance, source, eventArgs) =>
                       instance.OnCollectionChanged(source, eventArgs);
                   _weakEventListener.OnDetachAction = (weakEventListener) =>
                       newNotifyCollectionChanged.CollectionChanged -= weakEventListener.OnEvent;
                   newNotifyCollectionChanged.CollectionChanged += _weakEventListener.OnEvent;
            		]]>
            	</code>
            </remarks>
        </member>
        <member name="F:Telerik.Windows.WeakEventListener`3.weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Telerik.Windows.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Telerik.Windows.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DeferredAction">
            <summary>
            Request for a simple action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DeferredAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DeferredAction.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.AutomationID">
            <summary>
            A helper class:
            - provide an unique value if needed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.AutomationID.Validate(System.String,System.String)">
            <summary>
            Validate the given id: if it is empty string then a new (and valid) ID is returned.
            </summary>
            <param name="id">The value to validate.</param>
            <param name="templateID">A string value to concatenate with the unique ID.</param>
            <returns>A valid ID.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs">
            <summary>
            The event args used for various drag and drop related events.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropEventArgs">
            <summary>
            The event args used for various drag and drop related events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object,Telerik.Windows.Controls.DragDrop.DragDropOptions)">
            <summary>
            Initializes a new instance of the DragDropEventArgs class.
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="options">The drag event options.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropEventArgs.Options">
            <summary>
            Gets the drag drop information about this drag drop event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.#ctor(Telerik.Windows.RoutedEvent,System.Object,Telerik.Windows.Controls.DragDrop.DragDropOptions)">
            <summary>
            Initializes a new instance of the DragDropQueryEventArgs class.
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="options">The drag event options.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs.QueryResult">
            <summary>
            Gets or sets the result of the query. This result allows or denies actions in the drag drop process.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragArrow">
            <summary>
            A content control that serves as a visual indicator during a drag and drop operation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragArrow.#ctor">
            <summary>
            Initializes a new instance of the DragArrow class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager">
            <summary>
            A manager class that enables drag drop operations between objects.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AllowDragProperty">
            <summary>
            Identifies the AllowDrag attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AllowDropProperty">
            <summary>
            Identifies the AllowDrop attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragInfoEvent">
            <summary>
            Identifies the DragInfo event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DropInfoEvent">
            <summary>
            Identifies the DropInfo event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragQueryEvent">
            <summary>
            Identifies the DragQuery event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DropQueryEvent">
            <summary>
            Identifies the DragQuery event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.HideDuringLayoutChangeProperty">
            <summary>
            Identifies the VisibilityDuringLayoutChange attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetAllowDrag(System.Windows.DependencyObject)">
            <summary>
            Gets the AllowDrag attached property.
            </summary>
            <param name="obj">The object to get the property for.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetAllowDrag(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AllowDrag attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetAllowDrop(System.Windows.DependencyObject)">
            <summary>
            Gets the AllowDrop attached property.
            </summary>
            <param name="obj">The object to get the property for.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetAllowDrop(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the AllowDrop attached property.
            </summary>
            <param name="obj">The object to set the property to.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GetHideDuringLayoutChange(System.Windows.DependencyObject)">
            <summary>
            Gets the hide when drag started.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.SetHideDuringLayoutChange(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the hide when drag started.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">if set to <c>true</c> value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GenerateVisualCue(System.Windows.FrameworkElement)">
            <summary>
            Creates a drag/drop visual cue based on the default settings of the Drag/Drop manager.
            </summary>
            <param name="source">If provided, the properties of the visual cue will be set to match this element.</param>
            <returns>A new instance of the DragVisualCue class.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.GenerateArrowCue">
            <summary>
            Generates an arrow content control that can be used in as an arrow cue in the drag/drop operation.
            </summary>
            <returns>A new drag arrow cue element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDragQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Adds a handler to for the DragQuery routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDragQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Removes a handler for the DragQuery routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDropQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Adds a handler to for the DropQuery routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDropQueryHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropQueryEventArgs})">
            <summary>
            Removes a handler for the DropQuery routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDragInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Adds a handler to for the DragInfo routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDragInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Removes a handler for the DragInfo routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AddDropInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Adds a handler to for the DropInfo routed event.
            </summary>
            <param name="target">The element to add handler to.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.RemoveDropInfoHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Controls.DragDrop.DragDropEventArgs})">
            <summary>
            Removes a handler for the DropInfo routed event.
            </summary>
            <param name="target">The element to remove the handler from.</param>
            <param name="handler">The handler for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.IsDragging">
            <summary>
            Gets a value indicating whether there is a dragging in process.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.Options">
            <summary>
            Gets the status of the current drag and drop process.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.AutoBringIntoView">
            <summary>
            Gets or sets a value indicating whether the ScrollViews should automatically scroll to bring content into view.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.RadDragAndDropManager.DragStartThreshold">
            <summary>
            Gets or sets the distance in pixels that the user needs to drag an object
            before a real drag operation starts. This prevents incidental drag on mouse press.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragDropOptions">
            <summary>
            An object that holds information about the current drag/drop operation.
            </summary>
            <remarks>
                <para>
                    Used for giving information about and customizing a drag/drop operation.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Payload">
            <summary>
            Gets or sets the data object that is transferred in the drag/drop operation.
            </summary>
            <remarks>
                <para>
                    The Payload can only be set during the DragQuery stage of DragQuery.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Source">
            <summary>
            Gets the source that has registered with AllowDrag. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Destination">
            <summary>
            Gets the element that has registered the AllowDrop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCue">
            <summary>
            Gets or sets the element that will replace the SourceCueHost.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueHost">
            <summary>
            Gets or sets the element that will be replaced with the source cue during dragging.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.ArrowCue">
            <summary>
            Gets or sets the arrow that will appear during dragging.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DragCue">
            <summary>
            Gets or sets the element that will be dragged visually.
            </summary>
            <remarks>
                <para>
                    The SourceCue can only be changed during the DragQuery stage. 
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DestinationCue">
            <summary>
            The element that will replace the DestinationCueHost during drag/drop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DestinationCueHost">
            <summary>
            The object that will be replaced with the DestinationCue in a successful drag over.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.MouseClickPoint">
            <summary>
            Gets the point where the mouse was first pressed relative to the root canvas.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.CurrentDragPoint">
            <summary>
            Gets the point where the mouse is relative to the root canvas.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.Status">
            <summary>
            Gets the current status of the drag and drop operation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.ParticipatingVisualRoots">
            <summary>
            Gets a collection with the visual roots what will participate in the drag/drop operation but are not descendants of the application root visual.
            </summary>
            <remarks>
                <para>
                    All popups that should participate in the drag/drop should be added in this collection.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueRollback">
            <summary>
            The method that reinstates the source cue.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.SourceCueHostRollback">
            <summary>
            The method that reinstates the source cue host.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DragDrop.DragDropOptions.DragCueRollback">
            <summary>
            The method that reinstates the source cue host.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragStatus">
            <summary>
            Represents the status of a drag/drop operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.None">
            <summary>
            No drag or drop operations underway.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragQuery">
            <summary>
            A mouse down mouse has moved over a registered element, it is being queried now.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragInProgress">
            <summary>
            Dragging has started, no drop zones have been found.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragComplete">
            <summary>
            The drag/drop process is successful, notifying the source.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DragCancel">
            <summary>
            The drag/drop has been cancelled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropDestinationQuery">
            <summary>
            The destination is asked whether the element can be dropped.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropSourceQuery">
            <summary>
            The source is asked whether the element canb e dropped.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropPossible">
            <summary>
            The drop is acknowledged by both parties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropImpossible">
            <summary>
            The drop is not possible due to refusal of one of the partied.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropComplete">
            <summary>
            The drop operation has completed successfully.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DragDrop.DragStatus.DropCancel">
            <summary>
            The drop operation has been cancelled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DragDrop.DragVisualCue">
            <summary>
            A helper class, that serves as a visual cue during drag and drop operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DragDrop.DragVisualCue.#ctor">
            <summary>
            Initializes a new instance of the DragVisualCue class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ExpandDirection">
            <summary>
             ExpandDirection specifies the expanding direction of a control - for example the <c cref="T:Telerik.Windows.Controls.RadExpander"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Down">
            <summary>
            Expand direction is Down.
            </summary>		
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Up">
            <summary>
            Expand direction is Up.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Left">
            <summary>
            Expand direction is Left.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ExpandDirection.Right">
            <summary>
            Expand direction is Right.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpander">
            <summary>
             A HeaderContentControl used to create interactive Expand/Collapse control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.TemplateLeftProperty">
            <summary>
            Identifies the TemplateLeft property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.TemplateDownProperty">
            <summary>
            Identifies the TemplateDown property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.TemplateUpProperty">
            <summary>
            Identifies the TemplateUp property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.TemplateRightProperty">
            <summary>
            Identifies the TemplateRight property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.CollapsedEvent">
            <summary>
            Occurs when the ContentElement is Collapsed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadExpander.ExpandedEvent">
            <summary>
            Occurs when the ContentElement is Expanded.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.#ctor">
            <summary>
            Initializes a new instance of the RadExpander class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes
            (such as a rebuilding layout pass) call 
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.ChangeVisualState(System.Boolean)">
            <summary>
            Updates the visual state of the control.
            </summary>
            <param name="useTransitions">Indicates whether transitions should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpander.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.Collapsed">
            <summary>
            Occurs when the content is Collapsed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadExpander.Expanded">
            <summary>
            Occurs when the content Expanded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.TemplateDown">
            <summary>
            Gets or sets the template of the expander when the ExpandDirection is Down. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.TemplateUp">
            <summary>
            Gets or sets the template of the expander when the ExpandDirection is Up. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.TemplateLeft">
            <summary>
            Gets or sets the template of the expander when the ExpandDirection is Left. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.TemplateRight">
            <summary>
            Gets or sets the template of the expander when the ExpandDirection is Right. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.IsExpanded">
            <summary>
            Gets or sets whether the content is expanded. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the content would expand. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpander.IsAnimated">
            <summary>
            Gets or sets whether the content is animated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadExpanderAutomationPeer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.#ctor(Telerik.Windows.Controls.RadExpander)">
            <summary>
            Initializes a new instance of the RadExpanderAutomationPeer class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern that is associated with this AutomationPeer.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.Collapse">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.Expand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.IsEnabledCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GetNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.OwnerAsExpander">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadExpanderAutomationPeer.GuarantyEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadExpanderAutomationPeer.ExpandCollapseState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadHtmlPlaceholder">
            <summary>
            RadHtmlPlaceholder allows you to display a custom html content over the Silverlight application.
            It is part of the page layout.
            Set the <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource"/> property or <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl"/> property to set the html content.
            </summary>
            <remarks>
            It is mandatory to set the Windowless property of the Silverlight object, in order to be able to 
            overly html content over Silverlight
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSourceProperty">
            <summary>
            Identifies the HtmlSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUriProperty">
            <summary>
            Identifies the SourceUri dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadHtmlPlaceholder"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Telerik.Windows.Controls.RadHtmlPlaceholder"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadHtmlPlaceholder.TransformToVisualHacked(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Microsoft implementation of TransformToVisual is not working if the controls is in a Popup
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadHtmlPlaceholder.UrlLoaded">
            <summary>
            Occurs when the external url that is set as a source is loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource">
            <summary>
            Gets or sets the html string that will be displayed over the Silverlight content.
            </summary>
            <remarks>
            This property takes precedence over the <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl"/> property
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.SourceUrl">
            <summary>
            Gets or sets the external url that will be loaded over the Silverlight content.
            </summary>
            <remarks>
            If <see cref="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlSource"/> property is set, this property is ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.RespectSilverlightLayoutMeasure">
            <summary>
            Set to false if the placeholders should be resized from the Silvrelight layout only.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadHtmlPlaceholder.HtmlPresenter">
            <summary>
            Gets or sets the HTML presenter element.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.Mouse">
            <summary>
            Represents the mouse device. Contains several extensions to the Silverlight mouse capabilities.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseWheelEvent">
            <summary>
                Occurs when the mouse wheel is rotated.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseDownEvent">
            <summary>
                Occurs when the right mouse button is pressed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Mouse.MouseUpEvent">
            <summary>
                Occurs when the right mouse button is released.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseWheelEventArgs})">
            <summary>
                Adds a handler for the MouseWheel attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseWheelEventArgs})">
            <summary>
                Removes a handler for the MouseWheel attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseButtonDownHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseButtonUpHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Adds a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseButtonDownHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Removes a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
                Removes a handler for the MouseDown attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseButtonUpHandler(System.Windows.DependencyObject,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Removes a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Telerik.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.UIElement,System.EventHandler{Telerik.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Removes a handler for the MouseUp attached event.
            </summary>
            <param name="element">The UIElement that listens to this event.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="P:Telerik.Windows.Input.Mouse.DoubleClickDuration">
            <summary>
            Gets or sets the value determining the duration between two clicks that are considered as a double click.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseButton">
            <summary>
            Defines values that specify the buttons on a mouse device. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Left">
            <summary>
            The left mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Middle">
            <summary>
            The middle mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButton.Right">
            <summary>
            The right mouse button. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseButtonEventArgs">
            <summary>
            Provides data for various events that report changes to the mouse wheel delta value of a mouse device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.MouseButtonEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, 
            optionally evaluated against a coordinate origin of a supplied <see cref="T:System.Windows.UIElement" />.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Point" /> that represents the current x- and 
            y-coordinates of the mouse pointer position. If null was passed as <paramref name="relativeTo" />, 
            this coordinate is for the overall Silverlight plug-in content area. 
            If a non-null <paramref name="relativeTo" /> was passed, this coordinate 
            is relative to the object referenced by <paramref name="relativeTo" />.
            </returns>
            <param name="relativeTo">
            Any <see cref="T:System.Windows.UIElement" />-derived object 
            that is contained by the Silverlight plug-in and connected to the object tree. 
            To specify the object relative to the overall  Silverlight coordinate system, 
            set the <paramref name="relativeTo" /> parameter to null.
            </param>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ChangedButton">
            <summary>
            Gets the button associated with the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ButtonState">
            <summary>
            Gets the state of the button associated with the event. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Input.MouseButtonEventArgs.ClickCount">
            <summary>
            Gets the number of times the button was clicked. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseButtonState">
            <summary>
            Specifies the possible states of a mouse button. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButtonState.Released">
            <summary>
            The button is released.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.MouseButtonState.Pressed">
            <summary>
            The button is pressed. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Input.MouseWheelEventArgs">
            <summary>
            Provides data for various events that report changes to the mouse wheel delta value of a mouse device.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Input.MouseWheelEventArgs.GetPosition(System.Windows.UIElement)">
            <summary>
            Returns the x- and y-coordinates of the mouse pointer position, 
            optionally evaluated against a coordinate origin of a supplied <see cref="T:System.Windows.UIElement" />.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Point" /> that represents the current x- and 
            y-coordinates of the mouse pointer position. If null was passed as <paramref name="relativeTo" />, 
            this coordinate is for the overall Silverlight plug-in content area. 
            If a non-null <paramref name="relativeTo" /> was passed, this coordinate 
            is relative to the object referenced by <paramref name="relativeTo" />.
            </returns>
            <param name="relativeTo">
            Any <see cref="T:System.Windows.UIElement" />-derived object 
            that is contained by the Silverlight plug-in and connected to the object tree. 
            To specify the object relative to the overall  Silverlight coordinate system, 
            set the <paramref name="relativeTo" /> parameter to null.
            </param>
        </member>
        <member name="P:Telerik.Windows.Input.MouseWheelEventArgs.Delta">
            <summary>
            Gets a value that indicates the amount that the mouse wheel has changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Input.Window.WindowUnloadEvent">
            <summary>
            Occurs when the browser window is closing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.AjaxHistoryManager">
            <summary>
            AjaxHistoryManager enables you to use the functionality from Microsoft Ajax Framework
            to enable the browser back and forward buttons to navigate thru the pages
            in the application.
            </summary>
            <remarks>
            To use the Ajax history you need to embed your Silverlight application into a
            Ajax-enabled web application and to set the EnableHistory property of 
            the ScriptManager control to True.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.AjaxHistoryManager.LoadPoint(System.Object,System.Object)">
            <summary>
            This is the entry point used from the Ajax history manager to interact with the Silverlight
            application when the browser history is changed.
            </summary>
            <remarks>
            Used internaly from the RadNavigation framework.
            </remarks>
            <param name="sender">The Ajax javascript object.</param>
            <param name="args">The absolute uri that needs to be loaded in the Silverlight application.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.AjaxHistoryManager.AddPointData(System.String)">
            <summary>
            Adds the point data to AjaxHistory.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.AjaxHistoryManager.HistoryChanged">
            <summary>
            Occurs when the history journal is changed.
            </summary>
            <remarks>
            This event is raised every time a new Page is navigated to or when
            the Previouse/Forward actions occures.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.AjaxHistoryManager.JavaScriptHistoryManager">
            <summary>
            Represents the Javascript Ajax history object. This object is needed for the interaction between
            the Silverlight application and the Ajax history manager.
            </summary>
            <remarks>
            Used internally from the RadNavigation framework,
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.BrowserHistoryEventArgs">
            <summary>
            BrowserHistoryEventArgs used in implementing AjaxHistoryManager.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.BrowserHistoryEventArgs.HistoryState">
            <summary>
            The state in RadNavigation is the URI that identifies which pages should be loaded.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.FrameInfoEventArgs">
            <summary>
             EventArgs used in setting different values of one page instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FrameInfoEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.FrameInfoEventArgs"/> class.
            </summary>
            <param name="frameType">Type of the frame.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.FrameInfoEventArgs.FrameType">
            <summary>
            Gets the  instance of the base frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.FrameInfoEventArgs.Frame">
            <summary>
            Gets the  instance of the base frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFrameContainer">
            <summary>
            RadFrameContainer class is used as a plaseholder for RadPages or RadFrames.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrameContainer.#ctor">
            <summary>
            Initializes a new instance of the RadFrameContainer class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFrame">
            <summary>
            RadFrame class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadPage">
            <summary>
            RadPage is the class that represent navigation page in page navigation.It can be.used with NavigationService, RadNavigationButton or RadFrame for PageNavigation.
            You have to use RadPage classes in order to have page navigation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.IFrame">
            <summary>
            Base interface for navigation containers.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IFrame.NavigationIdentifier">
            <summary>
            Gets or sets the navigation identifier.
            </summary>
            <value>The navigation identifier.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.IFrame.ParentContainer">
            <summary>
            Gets or sets the parent frame.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IFrame.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPage.#ctor">
            <summary>
            Initializes a new instance of the RadPage class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPage.NavigationIdentifier">
            <summary>
            Identifies the frame inside the NavigationUri.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPage.ChildContainer">
            <summary>
            Gets or sets the RadPage`s child RadFrameContainer if there is any on the page.
            </summary> 
            <value>The child container.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPage.ParentContainer">
            <summary>
            Gets or sets the RadFramecontainer in which tha RadPage is placed.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPage.Title">
            <summary>
            Gets or sets the title of the WebPage.
            </summary>
            <value></value>
        </member>
        <member name="F:Telerik.Windows.Controls.RadFrame.SourceProperty">
            <summary>
            Sorce property is used in order to navigate to desired page using it`s string representation in XAML or code behind.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadFrame"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.Navigate(Telerik.Windows.Controls.IFrame)">
            <summary>
            Navigates the specified frame using current set transition.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.Navigate(Telerik.Windows.Controls.IFrame,Telerik.Windows.Controls.ITransition)">
            <summary>
            Navigates the specified frame using specified transition.
            </summary>
            <param name="frame">The frame.</param>
            <param name="transition">The transition.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.Navigate(System.String,Telerik.Windows.Controls.ITransition)">
            <summary>
            Navigates the specified frame using page instance string representation and specified transition.
            </summary>
            <param name="frame">The frame.</param>
            <param name="transition">The transition.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.Navigate(System.String)">
            <summary>
            Navigates the specified frame using page string representation.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFrame.OnNavigating(Telerik.Windows.Controls.IFrame)">
            <summary>
            Called when [navigating].
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadFrame.Navigating">
            <summary>
            Occurs in the end of page navigation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFrame.ParentContainer">
            <summary>
            Gets or sets the parent frame.
            </summary>
            <value>The parent frame.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadFrame.Source">
            <summary>
            Gets or sets the RadFrame source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.NavigationAction">
            <summary>
            ButtonAction enables you to select navigation mode. You can use GoBack for back navigation,
            BoForward for forward navigation or LoadPage if you want to navigate to a specific page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationAction.GoBack">
            <summary>
            Use GoBack if you want to perform back page navigation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationAction.GoForward">
            <summary>
            Use GoForward if you want to perform forwards page navigation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationAction.LoadPage">
            <summary>
            Use LoadPage if you want to perform specific page navigation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.NavigationTarget">
            <summary>
            Specify the target where the new page will be loaded.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationTarget.Self">
            <summary>
            Use the Self option to load replace the current page with the new one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationTarget.Child">
            <summary>
            Use the Child option to load the page in the child frame.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationTarget.Parent">
            <summary>
            Use the Parent option to load the page in the parent page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.NavigationTarget.Top">
            <summary>
            Use the Top option to load the page in the RootVisual - e.g. on the root level.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadNavigationButton">
            <summary>
            RadNavigationButton enables you to navigate to a specific page by clicking the button. You can set 
            ActionProperty in order to set navigation action and NavigateUriProperty in order to set the navigation 
            page.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadNavigationButton.NavigateUriProperty">
            <summary>
            Identifies NavigateUri dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadNavigationButton.TargetProperty">
            <summary>
            Identifies Target dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadNavigationButton.ActionProperty">
            <summary>
            Identifies Action dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadNavigationButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadNavigationButton"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadNavigationButton.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadNavigationButton.NavigateUri">
            <summary>
            NavigateUri Property is used when you want to navigate to a specific page.
            </summary>
            <remarks>
            In order to use this property correctly you have to set it`s value to string representation of the page.
            For example : "Page1" or "Page2" etc.
            </remarks>
            <value>The navigation page string representation.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadNavigationButton.Target">
            <summary>
            Gets or sets the target. 
            </summary>
            <remarks>
            This property is ingored when the Action is set to Back or Forward.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadNavigationButton.Action">
            <summary>
            ActionProperty is used when you want to set the button action value.It can be GoBack,
            GoForward or LoadPage.
            </summary>
            <value>The ButtonAction value..</value>
            <remarks>
            For example : ButtonAction.GoBack/ButtonAction.GoForward .
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.NavigatingCancelEventArgs">
            <summary>
            NavigatingCancelEventArgs Provides data for the Navigating event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigatingCancelEventArgs.#ctor(Telerik.Windows.Controls.IFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.NavigatingCancelEventArgs"/> class.
            </summary>
            <remarks>
            The event is not cancelable - it is named so in sake of WPF compatibility 
            </remarks>
            <param name="frame">The frame.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigatingCancelEventArgs.Frame">
            <summary>
            Gets the frame.
            </summary>
            <value>The frame.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ITransition">
            <summary>
            Base interface for all transitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ITransition.Begin(Telerik.Windows.Controls.IFrame)">
            <summary>
            Transitions the page.Transition between previous and next page.
            </summary>
            <param name="page">The next page.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ITransition.StopTransition">
            <summary>
            Stops the currently runnint transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ITransition.IsRunning">
            <summary>
            Gets or sets a value indicating whether the transition is running.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.NavigationService">
            <summary>
            NavigationService.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GetNavigationService(System.Windows.UIElement)">
            <summary>
            Gets the navigation service.
            </summary>
            <param name="targetFrameContainer">The target frame container.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GetNavigationService">
            <summary>
            Gets the navigation service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.LoadDeepLink">
            <summary>
            Loads the deep link.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.Navigate(Telerik.Windows.Controls.IFrame)">
            <summary>
            Navigates the specified frame.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.Navigate(Telerik.Windows.Controls.IFrame,System.Boolean)">
            <summary>
            Navigates the specified frame.
            </summary>
            <param name="frame">The frame.</param>
            <param name="addToHistory">If set to <c>true</c> [add to history].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.Navigate(System.String,System.Boolean)">
            <summary>
            Navigates the specified URI.
            </summary>
            <param name="pageName">The pageName.</param>
            <param name="addToHistory">If set to <c>true</c> [add to history].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.Navigate(System.String)">
            <summary>
            Navigates the specified URI.
            </summary>
            <param name="pageName">The pageName.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.SetApplicationUri(System.String)">
            <summary>
            Sets the application URI.
            </summary>
            <param name="absoluteUri">The absolute URI.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GoForward">
            <summary>
            Navigate forward in the history.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GoBack">
            <summary>
            Navigate Back in the history.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.OnNavigating(Telerik.Windows.Controls.IFrame)">
            <summary>
            Called every time when page navigation happen.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.OnGetBookmarkFromUri(System.String)">
            <summary>
            Called when you want to get the bookmark that represent some uri.
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.OnGetUriFromBookmark(System.String)">
            <summary>
            Called when you want to transform the bookmark to real uri.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.OnGetPageForBookmark(System.String)">
            <summary>
            Called when you want to get some page instance from custom bookmark.
            </summary>
            <param name="frameType">The frame.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GetStateFromUrl">
            <summary>
            Gets the URI from browser bookmark.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.GetUrisToLoad(System.String,System.String)">
            <summary>
            Compare the passed uris and returns a queue with the different pages
            that need to be loaded.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.ComposeAbsoluteUri(Telerik.Windows.Controls.IFrame)">
            <summary>
            Compose the absolute uri, depending on the Target and the frame that will be loaded in this target.
            </summary>
            <param name="frame">The frame.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.LoadUriOptimized(System.String)">
            <summary>
            Loads only the needed pages, without to reload the alread loaded pages.
            </summary>
            <remarks>
            If we have a current Uri -> /page1/page2/page3,
            and want to load new Uri -> /page1/page2/page4
            
            Only the page4 will be loaded, and page1 and page2 will stay
            untouched.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.NavigationService.PerformTransition(Telerik.Windows.Controls.IFrame)">
            <summary>
            Performs the transition between two pages.
            </summary>
            <param name="nextFrame">The next frame.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.NavigationService.Navigating">
            <summary>
            Occurs when navigating from one page to another.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.NavigationService.GetBookmarkFromUri">
            <summary>
            Occurs when you want to get bookmark from uri.
            </summary>
            <remarks>
            If you want to get some custom bookmark that represent an instant of page from it`s uri.
            </remarks>
        </member>
        <member name="E:Telerik.Windows.Controls.NavigationService.GetUriFromBookmark">
            <summary>
            Occurs when you want to get uri from bookmark.
            </summary>
            <remarks>
            If you have some custom bookmark and want to get the real page uri then you have to use this method.
            </remarks>
        </member>
        <member name="E:Telerik.Windows.Controls.NavigationService.GetPageFromBookmark">
            <summary>
            Occurs when query base page instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.UseBrowserHistory">
            <summary>
            Gets or sets a value indicating wheter the integration with Browser history is enabled.
            </summary>
            <remarks>
            This features requires that the Silverlight application is in Ajax-enabled web application and
            that the ScriptManager controls in the ASP.NET page has the property EnableHistory set to True.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.BrowserHistoryIdentifier">
            <summary>
            Gets or sets the browser history identifier.
            </summary>
            <remarks>
            Use this property to tweak the name of the parameter used to identify your application 
            in the browser bookmark string.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.LocationUri">
            <summary>
            Gets or sets the location URI.
            </summary>
            <value>The location URI.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.UseHistoryBookmark">
            <summary>
            Gets or sets a value indicating whether to [use historybookmark].
            </summary>
            <value><c>True</c> if [use historybookmark]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.Transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
            <remarks>
            Transition is the animation effect between two page navigation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.RootPanel">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
            <remarks>
            This property is used only if you do not want to set application`s RootVisual to RadFramecontainer or some Panel.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
            <remarks>
            Target is the place where the page will be placed in page navigation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.ForwardHistory">
            <summary>
            Gets the Forward history list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.NavigationService.BackHistory">
            <summary>
            Gets the Back history list.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DefaultTransition">
            <summary>
            DefaultTransition implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DefaultTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DefaultTransition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DefaultTransition.Begin(Telerik.Windows.Controls.IFrame)">
            <summary>
            Begins the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DefaultTransition.StopTransition">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DefaultTransition.IsRunning">
            <summary>
            Gets or sets a value indicating whether this instance is running.
            </summary>
            <value>
            	<c>True</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.FadeTransition">
            <summary>
            FadeTransition implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FadeTransition.#ctor">
            <summary>
            Initializes a new instance of the FadeTransition class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FadeTransition.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the FadeTransition class.
            </summary>
            <param name="duration">The duration.</param>
            <remarks>
            Duration is the time between navigating from one page to another.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.FadeTransition.StopTransition">
            <summary>
            Stops the transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.FadeTransition.Begin(Telerik.Windows.Controls.IFrame)">
            <summary>
            Transitions the page.Transition between previous and next page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.FadeTransition.CurrentStoryboard">
            <summary>
            Gets or sets the current story board.
            </summary>
            <value>The current story board.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.FadeTransition.IsRunning">
            <summary>
            Gets or sets a value indicating whether this instance is running.
            </summary>
            <value>
            	<c>True</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.UriInfoEventArgs">
            <summary>
            EventArgs used in setting custom hashes for browser uri.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.UriInfoEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.UriInfoEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.UriInfoEventArgs.Uri">
            <summary>
            Gets or sets the location URI.
            </summary>
            <value>The location URI.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.UriInfoEventArgs.Bookmark">
            <summary>
            Gets or sets the bookmark.
            </summary>
            <value>The bookmark.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Dock">
            <summary>
            Specifies the Dock position of a child element that is inside a DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Left">
            <summary>
            A child element that is positioned on the left side of the DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Top">
            <summary>
            A child element that is positioned at the top of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Right">
            <summary>
            A child element that is positioned at the top of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Bottom">
            <summary>
            A child element that is positioned at the bottom of the DockPanel.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDockPanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally or vertically, relative to each other. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.DockProperty">
            <summary>
            Identifies the Dock attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.LastChildFillProperty">
            <summary>
            Identifies the LastChildFill dependency property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDockPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the Dock attached property for a specified UIElement.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.SetDock(System.Windows.UIElement,Telerik.Windows.Controls.Dock)">
            <summary>
            Sets the value of the Dock attached property to a specified element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDockPanel.LastChildFill">
            <summary>
            Gets or sets a value that indicates whether the last child element within 
            a DockPanel stretches to fill the remaining available space. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.RadUniformGrid">
            <summary>
            Uniform grid panel with orientation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstColumnProperty">
            <summary>
            Identifies the HideFirstColumn dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstRowProperty">
            <summary>
            Identifies the HideFirstRow dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.PreserveSpaceForCollapsedChildrenProperty">
            <summary>
            Identifies the PreserveSpaceForCollapsedChildren dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.ChildrenFlowProperty">
            <summary>
            Identifies the ChildrenFlow dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns"></see> dependency property.
            </returns>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumnProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn"></see> dependency property.
            </returns>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadUniformGrid.RowsProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows"></see> dependency property. 
            </summary>
            <returns>
            The identifier for the <see cref="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows"></see> dependency property.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.#ctor">
            <summary>
            Initializes a new instance of the RadUniformGrid class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Defines the layout of the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> by distributing space evenly among all of the child elements.
            </summary>
            <returns>
            The actual <see cref="T:System.Windows.Size"></see> of the grid that is rendered to display the child elements that are visible.
            </returns>
            <param name="finalSize">
            The <see cref="T:System.Windows.Size"></see> of the area for the grid to use.
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadUniformGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Computes the desired size of the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> by measuring all of the child elements.
            </summary>
            <returns>
            The desired <see cref="T:System.Windows.Size"></see> based on the child content of the grid and the constraint parameter.
            </returns>
            <param name="availableSize">
            The <see cref="T:System.Windows.Size"></see> of the available area for the grid.
            </param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Columns">
            <summary>
            Gets or sets the number of columns that are in the grid.
            </summary>
            <returns>
            The number of columns that are in the grid. The default value is zero (0). 
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.FirstColumn">
            <summary>
            Gets or sets the number of leading blank cells in the first row of the grid.
            </summary>
            <returns>
            The number of empty cells that are in the first row of the grid. The default value is zero (0).
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.Rows">
            <summary>
            Gets or sets the number of rows that are in the grid.
            </summary>
            <returns>
            The number of rows that are in the grid. The default value is zero (0).
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.PreserveSpaceForCollapsedChildren">
            <summary>
            Gets or sets a value specifying whether a collapsed child's size should be preserved.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.ChildrenFlow">
            <summary>
            Gets or sets a value that specifies the dimension in which child content is arranged.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Controls.Orientation"></see> value that represents the physical orientation of content within the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstColumn">
            <summary>
            Gets or sets value that hide or show the first column. This is a Dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadUniformGrid.HideFirstRow">
            <summary>
            Gets or sets value that hide or show the first row. This is a Dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWrapPanel">
            <summary>
            Positions child elements in sequential position from left to right, breaking content 
            to the next line at the edge of the containing box. Subsequent ordering happens 
            sequentially from top to bottom or from right to left, depending on the value of 
            the Orientation property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemHeightProperty">
            <summary>
            Identifies the ItemHeight dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemWidthProperty">
            <summary>
            Identifies the ItemWidth dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.IsAnimatedProperty">
            <summary>
            Identifies the IsAnimated dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadWrapPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>The duration of the animation.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.IsAnimated">
            <summary>
            Gets or sets a value indicating whether this RadWrapPanel is animated.
            </summary>
            <value>
            	<c>True</c> if this instance is animated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemHeight">
            <summary>
            Gets or sets a value that specifies the height of all items that are 
            contained within a WrapPanel. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemWidth">
            <summary>
            Gets or sets a value that specifies the width of all items that are 
            contained within a WrapPanel. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.Orientation">
            <summary>
            Gets or sets a value that specifies the dimension in which child 
            content is arranged. This is a dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.Window">
            <summary>
            The popup is a window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.TopMostWindow">
            <summary>
            The popup is a TopMost window.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.Popup">
            <summary>
            The popup is a simple popup.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupType.DockWindow">
            <summary>
            The popup is a dock window (ToolWindow).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PopupManager">
            <summary>
            Manage starting ZIndexes of popup controls.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Reset">
            <summary>
            For Testing Purpose.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Open(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Opens popup control.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if opened, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Open(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType,System.Boolean)">
            <summary>
            Opens popup control.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <param name="attachToVisualRoot">Whether the popup should be attached to the visual root.</param>
            <returns>True if opened, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Close(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Closes popup control.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.Close(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType,System.Boolean)">
            <summary>
            Closes popup control.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFront(System.Windows.Controls.Primitives.Popup,Telerik.Windows.Controls.PopupType)">
            <summary>
            Attempt to brings the popup on top. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will be on top.</param>
            <param name="type">The type of the popup (e.g. Window, Popup, etc.).</param>
            <returns>True if on top, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Window popup. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Window popup. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move Window in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenTopMostWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Window popup. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseTopMostWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Window popup. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontTopMostWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move Window in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenPopup(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows Popup control. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.ClosePopup(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides Popup control. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontPopup(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move popup control in front of all popups. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.OpenDockWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Shows DockWindow control. Should be called on closed popups (IsOpen=false).
            </summary>
            <param name="popup">The popup that will show.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CloseDockWindow(System.Windows.Controls.Primitives.Popup,System.Boolean)">
            <summary>
            Hides DockWindow control. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that will hide.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.BringToFrontDockWindow(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Move DockWindow in front of all windows. Should be called on opened popups (IsOpen=true).
            </summary>
            <param name="popup">The popup that go in front.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanPopupOpen(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be opened.
            </summary>
            <param name="popup">The popup that will be opened.</param>
            <returns>True if it can be open, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanPopupClose(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be closed.
            </summary>
            <param name="popup">The popup that will be closed.</param>
            <returns>True if it can be closed, otherwise False.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupManager.CanBringToFront(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Check whether popup could be on top.
            </summary>
            <param name="popup">The popup that wants to be on top.</param>
            <returns>True if it can be on top, otherwise False.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.WindowStartingZIndex">
            <summary>
            Gets or sets starting index for RadWindow controls. Should be bigger then zero
            and smaller then TopWinows ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.TopWindowStartingZIndex">
            <summary>
            Gets or sets starting index for TopMost RadWindow controls. Should be bigger then Windows ZIndex and smaller then Popups ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.PopupStartingZIndex">
            <summary>
            Gets or sets starting index for Popup controls. Should be bigger then TopWindows ZIndex
            and smaller then DockWinows ZIndex.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupManager.DockWindowStartingZIndex">
            <summary>
            Gets or sets starting index for RadDockWindow controls. Should be bigger then Popups ZIndex 
            and smaller then 1000000.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PopupWrapper.ClearReferences">
            <summary>
            This method is called when you will no longer need this instance of PopupWrapper.
            You should manually remove handlers from ClickedOutsidePopup event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.PopupWrapper.RegisteredPopups">
            <summary>
            Contains a list of all Open Popup objects.
            </summary>
            <remarks>
            Used to properly raise routed events like MouseWheel.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.RadProgressBarAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="T:Telerik.Windows.Controls.RangeBaseAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
            <summary>
            Initializes a new instance of the RangeBaseAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseMaximumPropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseMinimumPropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseValuePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseSmallChangePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseLargeChangePropertyChangedEvent(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.RaiseIsReadOnlyPropertyChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.GuarantyEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RangeBaseAutomationPeer.OwnerAsRangeBase">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.LargeChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.SmallChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RangeBaseAutomationPeer.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.#ctor(Telerik.Windows.Controls.RadProgressBar)">
            <summary>
            Initializes a new instance of the RadProgressBarAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBarAutomationPeer.GetClickablePointCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.PlacementMode">
            <summary>
            Describes the placement of where a Popup control appears on the screen.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Absolute">
            <summary>
            A position of the Popup control relative to the upper-left corner of 
            the screen and at an offset that is defined by the HorizontalOffset 
            and VerticalOffset property values. If the screen edge obscures the 
            Popup, the control then repositions itself to align with the edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Bottom">
            <summary>
            A position of the Popup control where the control aligns its upper edge 
            with the lower edge of the PlacementTarget and aligns its left edge with 
            the left edge of the PlacementTarget. If the lower screen-edge obscures 
            the Popup, the control repositions itself so that its lower edge aligns 
            with the upper edge of the PlacementTarget. If the upper screen-edge 
            obscures the Popup, the control then repositions itself so that its upper 
            edge aligns with the upper screen-edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Center">
            <summary>
            A position of the Popup control where it is centered over the PlacementTarget. 
            If a screen edge obscures the Popup, the control repositions itself to align 
            with the screen edge. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Right">
            <summary>
            A position of the Popup control that aligns its left edge with the right edge 
            of the PlacementTarget and aligns its upper edge with the upper edge of the 
            PlacementTarget. If the right screen-edge obscures the Popup, the control 
            repositions itself so that its left edge aligns with the left edge of the 
            PlacementTarget. If the left screen-edge obscures the Popup, the control 
            repositions itself so that its left edge aligns with the left screen-edge. 
            If the upper or lower screen-edge obscures the Popup, the control then 
            repositions itself to align with the obscuring screen edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Left">
            <summary>
            A Popup control that aligns its right edge with the left edge of the PlacementTarget 
            and aligns its upper edge with the upper edge of the PlacementTarget. If the left 
            screen-edge obscures the Popup, the Popup repositions itself so that its left edge 
            aligns with the right edge of the PlacementTarget. If the right screen-edge obscures 
            the Popup, the right edge of the control aligns with the right screen-edge. If the 
            upper or lower screen-edge obscures the Popup, the control repositions itself to 
            align with the obscuring screen edge.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.Top">
            <summary>
            A position of the Popup control that aligns its lower edge with the upper edge of 
            the PlacementTarget and aligns its left edge with the left edge of the PlacementTarget. 
            If the upper screen-edge obscures the Popup, the control repositions itself so that 
            its upper edge aligns with the lower edge of the PlacementTarget. If the lower 
            screen-edge obscures the Popup, the lower edge of the control aligns with the 
            lower screen-edge. If the left or right screen-edge obscures the Popup, it then 
            repositions itself to align with the obscuring screen.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PopupAnimation">
            <summary>
            Defines the values, specifying the animation type which will be
            played when a RadPopup is opened or closed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupAnimation.None">
            <summary>
            Disables the RadPopup animation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PopupAnimation.Fade">
            <summary>
            Fades in or out the RadPopup when it is opened or closed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadProgressBar">
            <summary>
            The RadProgressBar control can be used to to indicate the progress of an
            operation. It gives to an end-user visual feedback about an operation he
            is waiting for to complete.
            </summary>
            <remarks>
            The <strong>RadProgressBar</strong> control should be used as a visual indication of the progress of an operation. 
            The developer is responsible for programatically updating the value of the <strong>RadProgressBar</strong>, 
            while the control takes care of the visual representation of its value.
            </remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.IsIndeterminateProperty">
            <summary>
            Identifies the IsIndeterminate Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.SkipValueProperty">
            <summary>
            	Identifies the SkipValue Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadProgressBar.OrientationProperty">
            <summary>
                Identifies the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadProgressBar"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnCreateAutomationPeer">
            <summary>
            Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Windows Presentation Foundation (WPF) infrastructure.
            </summary>
            <returns>
            The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementation.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnSkipValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [skip value changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadProgressBar.OnValueChanged(System.Double,System.Double)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"/> routed event.
            </summary>
            <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property</param>
            <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> property</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.SkipValue">
            <summary>
            Gets or sets a value indicating the offset from which the ProgressBar indicator should start from.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.Orientation">
            <summary>
                Gets or sets the direction of filling of the control. This is a dependancy property.
            </summary>
            <value>
                One of the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation">Orientation enumeration</see>
                values. The default value is <strong>Horizontal</strong>.
            </value>
            <remarks>
            	<para>Use the <strong>ExpandMode</strong> property to specify the way RadPanelbar
                should behave after an item is expanded. The available options are:</para>
            	<list type="bullet">
            		<item><strong>Single</strong> (default) - Only one item can be expanded at a
                    time. Expanding another item collapses the previously expanded one.</item>
            		<item><strong>Multiple</strong> - More than one item can
                    be expanded at a time.</item>
            	</list>
            </remarks>
            <example>
                The following example demonstrates how to programmatically set the <see cref="P:Telerik.Windows.Controls.RadProgressBar.Orientation">Orientation</see> 
                property of a <strong>RadProgressBar</strong> control.
                <code lang="CS">
            		void Page_Load(object sender, EventArgs e)
            		{
            			RadProgressBar myProgressBar = new RadProgressBar();
            			myProgressBar.Orientation = Orientation.Vertical;
            		}
                </code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadProgressBar.IsIndeterminate">
            <summary>
            Gets or sets a value indicating whether this instance is indeterminate.
            </summary>
            <value>
            	<c>true</c> if this instance is indeterminate; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollViewerExtensions">
            <summary>
            Contains attached behavior for enabling mouse wheel scrolling for ScrollViewer controls.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollViewerExtensions.EnableMouseWheelProperty">
            <summary>
            Identifies the EnableMouseWheel dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.GetEnableMouseWheel(System.Windows.DependencyObject)">
            <summary>
            Gets whether the mouse wheel scrolling is enabled for the specified ScrollViewer.
            </summary>
            <param name="obj">The DependencyObject from which to read the property value.</param>
            <returns>True if the mouse wheel scrolling is enabled for the specified ScrollViewer, otherwise false.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.SetEnableMouseWheel(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value determining whether the mouse wheel scrolling is enabled for the specified ScrollViewer.
            </summary>
            <param name="obj">The DependencyObject on which to set the property value.</param>
            <param name="value">True if the mouse wheel scrolling should be enabled, otherwise False.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollViewerExtensions.OnScrollViewerMouseWheel(System.Object,Telerik.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the MouseWheel event is fired.
            </summary>
            <param name="sender">A ScrollViewer control instance.</param>
            <param name="args">The <see cref="T:Telerik.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.DoubleRangeBase">
            <summary>
            DoubleRangeBase inherits RangeBase and introduces two new fields - SelectionStart and SelectionEnd.
            SelectionStart cannot be greater than SelectionEnd and SelectionEnd cannot be less than SelectionStart.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionStartProperty">
            <summary>
            Identifies the SelectionStart dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DoubleRangeBase.SelectionEndProperty">
            <summary>
            Identifies the SelectionEnd dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DoubleRangeBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property changes.
            </summary>
            <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
            <param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property changes.
            </summary>
            <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
            <param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionStartChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionStartChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionEndChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionEndChanged event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DoubleRangeBase.OnSelectionRangeChanged(Telerik.Windows.Controls.SelectionRangeChangedEventArgs,Telerik.Windows.Controls.SelectionRangeChangedEventArgs)">
            <summary>
            Called when SelectionRange event occurs.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionStartChanged">
            <summary>
            Occurs when SelectionStart property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionEndChanged">
            <summary>
            Occurs when SelectionEnd property changes value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.DoubleRangeBase.SelectionRangeChanged">
            <summary>
            Occurs when SelectionRange changes value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionRange">
            <summary>
            Gets the difference between SelectionStart and SelectionEnd.
            </summary>
            <value>The difference between SelectionStart and SelectionEnd.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">
            <summary>
            Gets or sets the largest value of a specified selection.
            </summary>
            <remarks>
            The value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property cannot be greater than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> property and cannot be less than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property. 
            The value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property must also be greater than or equal to the value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> property. 
            If the value of the <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> property is greater than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> property or less than the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property, the value is set to the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum">Maximum</see> or <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum">Minimum</see> property respectively. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1"
            			IsSelectionRangeEnabled="True" 
            			SelectionEnd="8"
            			SelectionStart="6"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.SelectionEnd = 8;
            		radSlider1.SelectionStart = 6;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">
            <summary>
            Gets or sets the smallest value of a specified selection.
            </summary>
            <remarks>
            IsSelectionRangeEnabled must be True in order to use <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see>
            The value of the SelectionStart property cannot be less than the value of the Minimum property and cannot be greater than the value of the Maximum property. The value of the SelectionEnd property must also be greater than or equal to the value of the SelectionStart property. If SelectionStart is less than Minimum or greater than Maximum, SelectionStart is set to the value of Minimum or Maximum respectively.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1"
            			IsSelectionRangeEnabled="True" 
            			SelectionEnd="8"
            			SelectionStart="6"/>
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		radSlider1.IsSelectionRangeEnabled = true;
            		radSlider1.SelectionEnd = 8;
            		radSlider1.SelectionStart = 6;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="F:Telerik.Windows.Controls.LargeClickDirection.Increase">
            <summary>
            Positive direction, the value will be increased.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LargeClickDirection.Decrease">
            <summary>
            Negative direction, the value will be decreased.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragCompletedEventArgs">
            <summary>
            Initializes a new instance of the RadDragCompletedEventArgs class.
            Provides data for the RadDragCompleted event that occurs when a user completes a drag operation with the mouse of Thumb control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragCompletedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragCompletedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragCompletedEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
            <param name="canceled">If set to <c>true</c> [canceled].</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.Canceled">
            <summary>
            Gets a value that indicates whether the drag operation was canceled.
            </summary>
            <value><c>True</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The horizontal change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.VerticalChange">
            <summary>
            Gets the vertical change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The vertical change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragCompletedEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragDeltaEventArgs">
            <summary>
            Provides data for the RadDragDelta event that occurs one or more times when a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragDeltaEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragDeltaEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragDeltaEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragDeltaEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The horizontal change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.VerticalChange">
            <summary>
            Gets the vertical change in the thumb position since the last RadDragDelta event.
            </summary>
            <value>
            The vertical change in the thumb position since the last RadDragDelta event.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragDeltaEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDragStartedEventArgs">
            <summary>
            Provides data for the RadDragStarted event that occurs when a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragStartedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragStartedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDragStartedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDragStartedEventArgs"/> class.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The vertical offset.</param>
            <param name="value">The value.</param>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.HorizontalOffset">
            <summary>
            Gets the horizontal distance between the current mouse position and the thumb coordinates.
            </summary>
            <value>
            The horizontal distance between the current mouse position and the thumb coordinates.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.VerticalOffset">
            <summary>
            Gets the vertical distance between the current mouse position and the thumb coordinates.
            </summary>
            <value>
            The vertical distance between the current mouse position and the thumb coordinates.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDragStartedEventArgs.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlider">
            <summary>
            Slider control lets the user select from a range of values by moving a slider. 
            Slider is used to enable to user to gradually modify a value (range selection). 
            Slider is an easy and natural interface for users, because it provides good visual feedback.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.HandlesVisibilityProperty">
            <summary>
            Identifies the HandlesVisibility dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsDirectionReversedProperty">
            <summary> 
            Identifies the IsDirectionReversed dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsMoveToPointEnabledProperty">
            <summary>
            Identifies the IsMoveToPointEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickTemplateSelectorProperty">
            <summary>
            Identifies the TickTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickTemplateProperty">
            <summary>
            Identifies the TickTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TicksProperty">
            <summary>
            Identifies the Ticks dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickPlacementProperty">
            <summary>
            Identifies the TickPlacement dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.TickFrequencyProperty">
            <summary>
            Identifies the TickFrequency dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the IsMouseWheelEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsSnapToTickEnabledProperty">
            <summary>
            Identifies the IsSnapToTickEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsSelectionRangeEnabledProperty">
            <summary>
            Identifies the IsSelectionRangeEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.RepeatIntervalProperty">
            <summary>
            Identifies the RepeatInterval dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.DelayProperty">
            <summary>
            Identifies the Delay dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.IsFocusedProperty">
            <summary>
                Identifies the IsFocused dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSlider.EnableSideTicksProperty">
            <summary>
            Identifies the EnableSideTicks dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSlider"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnValueChanged(System.Double,System.Double)">
            <summary>
            Called when the Value property changes. 
            </summary>
            <param name="oldValue">Old value of the Value property.</param>
            <param name="newValue">New value of the Value property.</param> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary> 
            Called when the Minimum property changes.
            </summary> 
            <param name="oldMinimum">Old value of the Minimum property.</param>
            <param name="newMinimum">New value of the Minimum property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary> 
            Called when the Maximum property changes.
            </summary>
            <param name="oldMaximum">Old value of the Maximum property.</param> 
            <param name="newMaximum">New value of the Maximum property.</param> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnSelectionStartChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionStart changes value.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnSelectionEndChanged(System.Double,System.Double)">
            <summary>
            Called when SelectionEnd changes value.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.UpdateTrackLayout">
            <summary> 
            This method will take the current min, max, and value to 
            calculate and layout the current control measurements.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnIsSelectionRangeEnabledChanged">
            <summary>
            Called when the IsSelectionRangeEnabled property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnOrientationChanged">
            <summary> 
            Called when the Orientation property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnTickPlacementChanged">
            <summary> 
            Called when the TickPlacement property changes value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnCreateAutomationPeer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.GotFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlider.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the System.Windows.UIElement.LostFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragStarted">
            <summary>
            Occurs when a thumb starts dragging.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragDelta">
            <summary>
            Occurs when the mouse moves while the thumb is still on focus.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSlider.DragCompleted">
            <summary>
            Occurs when the Thumb control loses mouse capture.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Delay">
            <summary>
            Gets or sets the Delay property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Delay="100" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Delay = 100;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.HandlesVisibility">
            <summary>
            Gets or sets the Visibility property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			HandlesVisibility="Visible" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.HandlesVisibility = Visibility.Visible;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.RepeatInterval">
            <summary>
            Gets or sets the RepeatInterval property of the Increase and Decrease handles.
            </summary>
            <remarks>
            Each click on any of the handles increases/decreases the value by the amount that is set to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">SmallChange</see> property.
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			RepeatInterval="100" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.RepeatInterval = 100;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsDirectionReversed">
            <summary> 
            Gets or sets the direction of increasing value. This is a dependency property. 
            </summary>
            <remarks>
            The value of this property determines the direction of increasing value of a RadRadSlider. 
            	<para>
            		For example, when you move the thumb control up on a vertical RadSlider when the IsDirectionReversed property is set to false, the Value of the RadSlider increases. 
            		If the value of the <b>IsDirectionReversed</b> property is changed to true, the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value">Value</see> of the <see cref="T:Telerik.Windows.Controls.RadSlider">RadSlider</see> decreases as the thumb moves up. 
            	</para>
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsDirectionReversed="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsDirectionReversed = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsMoveToPointEnabled">
            <summary>
            Gets or sets a value that indicates whether the thumb of a RadSlider moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the RadSlider track. This is a dependency property. 
            </summary>
            <remarks>
            When this property is set to false and a mouse click occurs along the RadSlider away from the thumb, the thumb moves in the direction of the mouse click. 
            Instead of moving immediately to the mouse click location, the thumb moves a distance that is defined by the RepeatInterval property for each mouse click.
            The effect of multiple mouse clicks can be emulated by pressing and holding the left mouse button until the thumb is repositioned to the desired location. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsMoveToPointEnabled="True" />
            		]]>	
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsMoveToPointEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsSelectionRangeEnabled">
            <summary>
            Gets or sets a value that indicates whether the RadSlider can displays a selection range. This is a dependency property. 
            </summary>
            <remarks>
            The <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionStart">SelectionStart</see> and <see cref="P:Telerik.Windows.Controls.DoubleRangeBase.SelectionEnd">SelectionEnd</see> properties define a selection range and must be set for the selection range to appear when IsSelectionRangeEnabled is set to true. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsSelectionRangeEnabled="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.IsSelectionRangeEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsSnapToTickEnabled">
            <summary>
            Gets or sets a value that indicates whether the RadSlider automatically moves the thumb to the closest tick mark. This is a dependency property. 
            </summary>
            <remarks>
            When the position of a thumb is changed and the IsSnapToTickEnabled property is set to true, the thumb is automatically moved to the closest tick mark. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsSnapToTickEnabled="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsSnapToTickEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Orientation">
            <summary>
            Gets or sets the orientation of a RadSlider. This is a dependency property. 
            </summary>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Height="100"
            			Orientation="Vertical" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Height = 100;		
            		radSlider1.Orientation = Orientation.Vertical;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsMouseWheelEnabled">
            <summary>
            Gets or sets whether the wheel of the mouse can be used for sliding the thumb. This is dependency property.
            </summary>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			IsMouseWheelEnabled="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.IsMouseWheelEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickFrequency">
            <summary>
            Gets or sets the interval between tick marks. This is a dependency property. 
            </summary>
            <remarks>
            If the Ticks property is set to a value that is not a null reference (Nothing in Visual Basic), the TickFrequency property is not used.T
            The TickPlacement property must be set to a value other than None for tick marks to appear along the RadSlider.
            Tick marks are drawn at an interval that is specified by the TickFrequency property. The tick marks start at the value of the Minimum property and continue until the value of the Maximum property is reached. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickPlacement">
            <summary>
            Gets or sets the position of tick marks with respect to the track of the RadSlider. This is a dependency property. 
            </summary>
            <remarks>
            The TickPlacement property must be set to a value other than None for tick marks to appear. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			TickFrequency="1" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		radSlider1.TickFrequency = 1;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.Ticks">
            <summary>
            Gets or sets the positions of the tick marks to display for a RadSlider. This is a dependency property.
            </summary>
            <remarks>
            Tick marks that are outside the range that is defined by the Minimum and Maximum property values are ignored.
            The TickPlacement property must be set to a value other than None for tick marks to appear. 
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<telerik:RadSlider	
            			x:Name="radSlider1" 
            			Width="100"
            			Orientation="Horizontal"
            			Minimum="0" Maximum="10"
            			TickPlacement="TopLeft"
            			Ticks="3,5,8"
            			IsMoveToPointEnabled="True" />
            		]]>
            	</code>
            	<code lang="CS">
            		<![CDATA[
            		RadSlider radSlider1 = new RadSlider();
            		radSlider1.Width = 100;		
            		radSlider1.Orientation = Orientation.Horizontal;
            		radSlider1.Minimum = 0;
            		radSlider1.Maximum = 10;
            		radSlider1.TickPlacement = TickPlacement.TopLeft;
            		DoubleCollection d = new DoubleCollection();
            		d.Add(3);
            		d.Add(5);
            		d.Add(8);
            		radSlider1.Ticks = d;
            		radSlider1.IsMoveToPointEnabled = true;
            		LayoutRoot.Children.Add(radSlider1);
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickTemplate">
            <summary>
            Gets or sets the TickTemplate that will be used to represent a single tick on the TickBar.
            </summary>
            <remarks>
            	<para>
            		Order of precedence (from highest to lowest):
            		1. TickTemplate
            		2. TickTemplateSelector
            		3. Default tick template
            	</para>
            </remarks>	
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<UserControl.Resources>
            			<DataTemplate Key="tickTemplate">
            				<Grid>
            					<TextBlock Text="{Binding}" />
            				</Grid>
            			</DataTemplate>
            		</UserControl.Resources>
            		<Grid x:Name="LayoutRoot">
            			<telerik:RadSlider x:Name="radSlider1" TickTemplate="{StaticResource tickTemplate}" TickFrequency="0.1" TickPlacement="Both"/>
            		</Grid>
            		]]>
            	</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.TickTemplateSelector">
            <summary>
            Gets or sets the TickTemplateSelector that will be used to pick a template for the tick marks.
            </summary>
            <remarks>
            	<para>
            		Order of precedence (from highest to lowest):
            		1. TickTemplate
            		2. TickTemplateSelector
            		3. Default tick template
            	</para>
            </remarks>
            <example>
            	<code lang="XAML">
            		<![CDATA[
            		<UserControl.Resources>
            			<DataTemplate Key="template_1">
            				<Grid>
            					<!-- Content of the template 1 goes here! -->
            				</Grid>
            			</DataTemplate>
            			<DataTemplate Key="template_2">
            				<Grid>
            					<!-- Content of the template 2 goes here! -->
            				</Grid>
            			</DataTemplate>
            			<DataTemplate Key="template_3">
            				<Grid>
            					<!-- Content of the template 3 goes here! -->
            				</Grid>
            			</DataTemplate>
            		</UserControl.Resources>
            		]]>
            	</code>
            		<code lang="CS">
            			<![CDATA[
            			public class TicksSelector : DataTemplateSelector
            			{
            				public UserControl Owner
            				{
            					get;
            					set;
            				}
            				
            				public override DataTemplate SelectTemplate(object item, DependencyObject container)
            				{
            					int num = Convert.ToInt32(item);
            					return this.Owner.Resources[String.Format("template_{0}", num)] as DataTemplate;
            				}
            			}
            			]]>
            		</code>
            </example>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.IsFocused">
            <summary>
                Gets whether the RadSlider control is focused. This is a dependency property.
            </summary>
            <remarks>
                <para>
                    The <strong>IsFocused</strong> property idicates whether the control has focus. If the slider is focused, 
                    one can use the keyboard to change its value.
                </para>
                <para>
                    The <strong>IsFocused</strong> property is Read-only, to move the focus to an element, use
                    the <see cref="M:System.Windows.Controls.Control.Focus"/> method.
                </para>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlider.EnableSideTicks">
            <summary>
            Gets or sets a value indicating whether side ticks are enabled.
            </summary>
            <value><c>true</c> if side ticks are enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSliderAutomationPeer">
             <summary>
            
             </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.#ctor(Telerik.Windows.Controls.RadSlider)">
            <summary>
            Initializes a new instance of the RadSliderAutomationPeer class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetClassNameCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSliderAutomationPeer.GetClickablePointCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTickBar">
            <summary>
            Represents a control that draws a set of tick marks for a RadSlider control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.TickTemplateSelectorProperty">
            <summary>
            Identifies the TickTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.TickTemplateProperty">
            <summary>
            Identifies the TickTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.PlacementProperty">
            <summary>
            Identifies the Placement dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.IsDirectionReversedProperty">
            <summary> 
            Identifies the IsDirectionReversed dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.TickFrequencyProperty">
            <summary>
            Identifies the TickFrequency dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.TicksProperty">
            <summary>
            Identifies the Ticks dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTickBar.EnableSideTicksProperty">
            <summary>
            Identifies the EnableSideTicks dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTickBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTickBar"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTickBar.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Ticks">
            <summary>
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.Ticks"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.TickFrequency">
            <summary>
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.TickFrequency"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.IsDirectionReversed">
            <summary> 
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.IsDirectionReversed"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Maximum">
            <summary>
            Bound to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Minimum">
            <summary>
            Bound to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Placement">
            <summary>
            Gets or sets where tick marks appear relative to a track of a <see cref="T:Telerik.Windows.Controls.RadSlider"/> control. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.TickTemplate">
            <summary>
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.TickTemplate"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.TickTemplateSelector">
            <summary>
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.TickTemplateSelector"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.Orientation">
            <summary>
            Bound to <see cref="P:Telerik.Windows.Controls.RadSlider.Orientation"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTickBar.EnableSideTicks">
            <summary>
            Gets or sets a value indicating whether side ticks are enabled.
            </summary>
            <value><c>true</c> if side ticks are enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarDayMonthNamesFormatInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid NamesFormat value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarGetDayNamesInvalidDaynamesFormat">
            <summary>
              Looks up a localized string similar to Invalid DayNamesFormat value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarMonthViewHeaderText">
            <summary>
              Looks up a localized string similar to MMMM&apos;, &apos;yyyy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnAreDatesInPastSelectableChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectedDate value. SelectedDate cannot be in the past..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnDisplayDateChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDate value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnDisplayDateEndChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDateEnd value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnDisplayDateStartChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDateStart value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnFirstDayOfWeekChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid FirstDayOfWeek value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnMonthViewHeaderTextChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid header format string..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnSelectableDateEndChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectableDateEnd value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnSelectableDateStartChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectableDateStart value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnSelectedDateChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectedDate value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Resource.CalendarOnSelectedDatesChangedReadOnly">
            <summary>
              Looks up a localized string similar to SelectedDates is a read-only DependencyProperty..
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs">
            <summary>
            Provides data for the SelectionStartChanged and SelectionEndChanged events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionRangeChangedEventArgs"/> class.
            </summary>
            <param name="selectionStart">The selection start.</param>
            <param name="selectionEnd">The selection end.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.SelectionStart">
            <summary>
            Gets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionRangeChangedEventArgs.SelectionEnd">
            <summary>
            Gets the selection end.
            </summary>
            <value>The selection end.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.TickBarPlacement">
            <summary>
            Specifies the placement of a TickBar with respect to the track of a RadSlider control. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Left">
            <summary>
            The tick bar is positioned to the left of the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Top">
            <summary>
            The tick bar is positioned above the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Right">
            <summary>
            The tick bar is positioned to the right of the track of the slider. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickBarPlacement.Bottom">
            <summary>
            The tick bar is positioned below the track of the slider. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TickPlacement">
            <summary>
            Specifies the position of tick marks in a RadSlider control with respect to the track in the control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.None">
            <summary>
            No tick marks appear.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.TopLeft">
            <summary>
            Tick marks appear above the track for a horizontal slider, or to the left of the track for a vertical slider.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.BottomRight">
            <summary>
            Tick marks appear below the track for a horizontal slider, or to the right of the track for a vertical slider.  
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TickPlacement.Both">
            <summary>
            Tick marks appear above and below the track bar for a horizontal slider, or to the left and right of the track for a vertical slider. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AllDayEvent">
            <summary>
              Looks up a localized string similar to All da_y event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppearanceCategory">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Appointment">
            <summary>
              Looks up a localized string similar to Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppointmentRecurrence">
            <summary>
              Looks up a localized string similar to Appointment Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.AppointmentTime">
            <summary>
              Looks up a localized string similar to Appointment time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BehaviourCategory">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Body">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.BrushesCategory">
            <summary>
              Looks up a localized string similar to Brushes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarAreDatesInPastSelectableDescription">
            <summary>
              Looks up a localized string similar to Gets or sets whether days in the past are selectable. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCalendarWeekRuleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets how should the first week in the year be counted. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCenturyViewHeaderFormat">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCenturyViewHeaderFormatDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the format for the header of the century views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCenturyViewPanelDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the items panel template for the century views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCenturyViewStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style of the century calendar view. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarColumnsDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the number of columns of calendar views in the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarCultureDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the culture that the Calendar uses. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDayButtonStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the day buttons in the month views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDayButtonStyleSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style selector for the day buttons in the month views of the Calendar..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDayMonthNamesFormatInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid NamesFormat value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDayTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the content templates for the day buttons in the month views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDayTemplateSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the DataTemplate selectors for the day buttons in the month views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeButtonStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the year decade in the century views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the content templates for the decade buttons in the century views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeTemplateSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the DataTemplate selectors for the decade buttons in the century views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeViewHeaderFormat">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeViewHeaderFormatDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the format for the header of the decade views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeViewPanelDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the items panel template for the decade views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarDecadeViewStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style of the decade calendar view. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarGetDayNamesInvalidDaynamesFormat">
            <summary>
              Looks up a localized string similar to Invalid DayNamesFormat value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthButtonStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the month buttons in the year views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthButtonStyleSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style selector for the month buttons in the year views of the Calendar..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the content templates for the month buttons in the year views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthTemplateSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the DataTemplate selectors for the month buttons in the year views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthViewHeaderFormat">
            <summary>
              Looks up a localized string similar to MMMM&apos; - &apos;yyyy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthViewHeaderFormatDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the format for the header of the month views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthViewHeaderText">
            <summary>
              Looks up a localized string similar to MMMM&apos;, &apos;yyyy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthViewPanelDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the items panel template for the month views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarMonthViewStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style of the month calendar view. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnAreDatesInPastSelectableChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectedDate value. SelectedDate cannot be in the past..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnDisplayDateChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDate value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnDisplayDateEndChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDateEnd value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnDisplayDateStartChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid DisplayDateStart value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnFirstDayOfWeekChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid FirstDayOfWeek value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnMonthViewHeaderTextChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid header format string..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnSelectableDateEndChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectableDateEnd value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnSelectableDateStartChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectableDateStart value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnSelectedDateChangedInvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SelectedDate value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarOnSelectedDatesChangedReadOnly">
            <summary>
              Looks up a localized string similar to SelectedDates is a read-only DependencyProperty..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarRowsDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the number of rows of calendar views in the calendar. This is a dependency proeprty..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearButtonStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the year buttons in the decade views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearButtonStyleSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style selector for the year buttons in the decade views of the Calendar..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the content templates for the year buttons in the decade views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearTemplateSelectorDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the DataTemplate selectors for the year buttons in the decade views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearViewHeaderFormat">
            <summary>
              Looks up a localized string similar to yyyy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearViewHeaderFormatDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the format for the header of the year views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearViewPanelDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the items panel template for the year views of the calendar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CalendarYearViewStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style of the yearcalendar view. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotBringToFrontDifferentTypes">
            <summary>
              Looks up a localized string similar to Cannot bring to front popup with different type..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotChangeStartingIndex">
            <summary>
              Looks up a localized string similar to Cannot change starting ZIndex when there are open Popup..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CannotUseItemsSource">
            <summary>
              Looks up a localized string similar to Items collection must be empty before using ItemsSource..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerAutomatic">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerStandardColors">
            <summary>
              Looks up a localized string similar to Standard colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ColorPickerThemeColors">
            <summary>
              Looks up a localized string similar to Theme colors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CommonCategory">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Confirm">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ContentCategory">
            <summary>
              Looks up a localized string similar to Content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowCameraYDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the Y of the camera..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowCenterOffsetYDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical offset of the logical center of the panel from the visual one..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowItemChangeDelayDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the item change delay..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowItemMaxHeightDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum height of an item..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowItemMaxWidthDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the maximum width of an item..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowItemReflectionRelativeHeightDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the relative height of the reflection (0-1)..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowItemReflectionStartAlphaDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the alpha at the begging of the reflection..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowNavigationLargeChangeDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the navigation large change property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowNavigationPanelVisibilityDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the navigation panel visibility..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowReflectionRelativeHeightDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the relative height of the reflection (0-1)..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CoverFlowReflectionStartAlphaDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the alpha at the begging of the reflection..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.CreateAppointment">
            <summary>
              Looks up a localized string similar to Create appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Daily">
            <summary>
              Looks up a localized string similar to _Daily.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Day">
            <summary>
              Looks up a localized string similar to _Day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Days">
            <summary>
              Looks up a localized string similar to day(s).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteAppointment">
            <summary>
              Looks up a localized string similar to Delete appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteItem">
            <summary>
              Looks up a localized string similar to Delete item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteItemQuestion">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete this appointment?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteOccurrence">
            <summary>
              Looks up a localized string similar to Delete this _occurrence..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteRecurringItem">
            <summary>
              Looks up a localized string similar to Delete Recurring Item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a recurring appointment. Do you want to delete only this occurrence or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DeleteSeries">
            <summary>
              Looks up a localized string similar to Delete the _series..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DragDropMissingAdornerLayer">
            <summary>
              Looks up a localized string similar to Root AdornerLayer Not Found. Please make sure that your root visual is Window or other element that has an adorner layer. Alternatively, wrap your root panel in an &lt;AdornerDecorator&gt; element..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationColon">
            <summary>
              Looks up a localized string similar to D_uration.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationDay">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationDays">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationHour">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationHours">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationMinute">
            <summary>
              Looks up a localized string similar to minute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationMinutes">
            <summary>
              Looks up a localized string similar to minutes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationWeek">
            <summary>
              Looks up a localized string similar to week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.DurationWeeks">
            <summary>
              Looks up a localized string similar to weeks.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditAppointment">
            <summary>
              Looks up a localized string similar to Edit Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditParentAppointment">
            <summary>
              Looks up a localized string similar to Edit Parent Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrence">
            <summary>
              Looks up a localized string similar to Edit Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrenceCommandText">
            <summary>
              Looks up a localized string similar to Edit _Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EditRecurrenceRule">
            <summary>
              Looks up a localized string similar to Edit recurrence rule.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndAfter">
            <summary>
              Looks up a localized string similar to End a_fter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndBy">
            <summary>
              Looks up a localized string similar to End _by.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndColon">
            <summary>
              Looks up a localized string similar to E_nd.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndDateBeforeStart">
            <summary>
              Looks up a localized string similar to The end date you entered occurs before the start date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EndTime">
            <summary>
              Looks up a localized string similar to End time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Event">
            <summary>
              Looks up a localized string similar to Event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Every">
            <summary>
              Looks up a localized string similar to E_very.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EveryDay">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.EveryWeekday">
            <summary>
              Looks up a localized string similar to Every wee_kday.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderExpandDirection">
            <summary>
              Looks up a localized string similar to This property determines the expand direction of the control. There are four options: Down, Up, Right and Left. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderHorizontalHeaderAlignment">
            <summary>
              Looks up a localized string similar to HorizontalHeaderAlignment determines the horizontal alignment of the Header. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderIsAnimated">
            <summary>
              Looks up a localized string similar to Use this property to permit the animation of the expander&apos;s content. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderIsExpanded">
            <summary>
              Looks up a localized string similar to Use this property to read and initialize expand and collapse states of the Expander. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateDown">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateLeft">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateRight">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderTemplateUp">
            <summary>
              Looks up a localized string similar to Expander will use the template from this property if it is initialized. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ExpanderVerticalHeaderAlignment">
            <summary>
              Looks up a localized string similar to VerticalHeaderAlignment determines the vertical alignment of the Header. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.First">
            <summary>
              Looks up a localized string similar to first.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Fourth">
            <summary>
              Looks up a localized string similar to fourth.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewClearFilter">
            <summary>
              Looks up a localized string similar to Clear Filter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterAnd">
            <summary>
              Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterContains">
            <summary>
              Looks up a localized string similar to Contains.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterEndsWith">
            <summary>
              Looks up a localized string similar to Ends with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsContainedIn">
            <summary>
              Looks up a localized string similar to Is contained in.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsEqualTo">
            <summary>
              Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsGreaterThan">
            <summary>
              Looks up a localized string similar to Is greater than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is greater than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsLessThan">
            <summary>
              Looks up a localized string similar to Is less than.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Is less than or equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterIsNotEqualTo">
            <summary>
              Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterSelectAll">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterShowRowsWithValueThat">
            <summary>
              Looks up a localized string similar to Show rows with value that.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewFilterStartsWith">
            <summary>
              Looks up a localized string similar to Starts with.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.GridViewGroupPanelText">
            <summary>
              Looks up a localized string similar to Drag a column header and drop it here to group by that column.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderContentControl_Header_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the header of the control..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedContentControl_HeaderTemplate_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the data template for the header..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedContnetControl_OnHasHeaderChanged">
            <summary>
              Looks up a localized string similar to HasHeader is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.HeaderedItemsControlHeaderDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the item that labels the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.InvalidRecurrenceRuleMessage">
            <summary>
              Looks up a localized string similar to The Recurrence pattern is not valid..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.InvalidRecurrenceRuleTitle">
            <summary>
              Looks up a localized string similar to Invalid pattern.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlIsTextSearchEnabled">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether TextSearch is enabled on the ItemsControl instance..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlItemContainerStyleDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the style for the item containers of the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextAlignmentDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of text in the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextDecorationsDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the decorations of the text for the items control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsControlTextWrappingDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the text wrapping behaviour for the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.ItemsSourceInUse">
            <summary>
              Looks up a localized string similar to Operation is not valid while ItemsSource is in use. Access and modify elements with ItemsControl.ItemsSource instead..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Last">
            <summary>
              Looks up a localized string similar to last.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.LayoutCategory">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Maximize">
            <summary>
              Looks up a localized string similar to Maximize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTimeStatusSeparator">
            <summary>
              Looks up a localized string similar to /.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipMute">
            <summary>
              Looks up a localized string similar to Mute.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipNextChapter">
            <summary>
              Looks up a localized string similar to Next Chapter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPlay">
            <summary>
              Looks up a localized string similar to Play.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPlaylist">
            <summary>
              Looks up a localized string similar to Toggle Play list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipPreviousChapter">
            <summary>
              Looks up a localized string similar to Previous Chapter.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipStop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MediaPlayerTooltipVolume">
            <summary>
              Looks up a localized string similar to Volume.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Minimize">
            <summary>
              Looks up a localized string similar to Minimize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.MiscCategory">
            <summary>
              Looks up a localized string similar to Misc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Month">
            <summary>
              Looks up a localized string similar to _Month.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Monthly">
            <summary>
              Looks up a localized string similar to _Monthly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Months">
            <summary>
              Looks up a localized string similar to month(s).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NoEndDate">
            <summary>
              Looks up a localized string similar to N_o end date.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NotAllowedEditorSettings">
            <summary>
              Looks up a localized string similar to Editor settings type should be a type of class which implements the IEditorSettings interface..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownAutoReverseDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the bool indicating whether the control reverses from maximal to minimal value and vice versa.This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownChangeAccelerationProperty">
            <summary>
              Looks up a localized string similar to Gets or sets Change Acceleration property. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownContentTextDescription">
            <summary>
              Looks up a localized string similar to Gets the current text content held by the textbox..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownDelayDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the delay time in millisconds between the first repetition of the buttons. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownDelayNonNegativeException">
            <summary>
              Looks up a localized string similar to Delay must be non negative integer..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownInvalidTemplateObjectsException">
            <summary>
              Looks up a localized string similar to Invalid template objects..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownInvalidValueFormatException">
            <summary>
              Looks up a localized string similar to Invalid value for the ValueFormat enum..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownIsEditableDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the bool indicating whether the control is editable or not. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownNumberFormatInfoDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the NumberFormatInfo to format the value if the ValueFormat is ValueFormat.Custom. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownNumberFormatInfoInvalidException">
            <summary>
              Looks up a localized string similar to Invalid NumberFormatInfo value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownNumericUnitDescription">
            <summary>
              Looks up a localized string similar to Gets or sets additional string to appear in the end of numeric values. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownRepeatIntervalDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the repeat interval between every repetition except the first one. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownRepeatIntervalNonNegativeException">
            <summary>
              Looks up a localized string similar to RepeatInterval must be non negative integer..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownShowButtons">
            <summary>
              Looks up a localized string similar to Gets or sets the ShowButtons property that indicates whether the up and down buttons are visible..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownValueChangedEventDescription">
            <summary>
              Looks up a localized string similar to Occurs when the value is changed..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownValueDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the current value of the control. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.NumericUpDownValueFormatDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the current value format. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Occurrences">
            <summary>
              Looks up a localized string similar to occurrences.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Of">
            <summary>
              Looks up a localized string similar to of.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OfEvery">
            <summary>
              Looks up a localized string similar to of every.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenOccurrence">
            <summary>
              Looks up a localized string similar to Open this _occurrence. .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenRecurringItem">
            <summary>
              Looks up a localized string similar to Open Recurring Item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenRecurringItemQuestion">
            <summary>
              Looks up a localized string similar to &quot;{0}&quot; is a recurring appointment. Do you want to open only this occurrence or the series?.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.OpenSeries">
            <summary>
              Looks up a localized string similar to Open the _series..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarExpandModePropertyDescription">
            <summary>
              Looks up a localized string similar to Identifies the ExpandMode dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarIsSelectedPropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies whether an item is selected or not..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarItemOnApplyTemplateInvalidOperation">
            <summary>
              Looks up a localized string similar to RadPanelBarItem objects should have a parent of type RadPanelBar!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarItemOnApplyTemplateInvalidOperation1">
            <summary>
              Looks up a localized string similar to RadPanelBarItem objects should have a parent of type RadPanelBar!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarSecondLevelTemplatePropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies the control template for second-level items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarSelectedValuePathPropertyDescription">
            <summary>
              Looks up a localized string similar to Identifies the SelectedValuePath dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PanelBarTopLevelTemplatePropertyDescription">
            <summary>
              Looks up a localized string similar to Specifies the control template for top-level items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.PopupIndexOutOfRange">
            <summary>
              Looks up a localized string similar to Popup index must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RangeOfRecurrence">
            <summary>
              Looks up a localized string similar to Range of recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RecurEvery">
            <summary>
              Looks up a localized string similar to Re_cur every.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RecurrencePattern">
            <summary>
              Looks up a localized string similar to Recurrence pattern.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.RemoveRecurrence">
            <summary>
              Looks up a localized string similar to Remove Recurrence.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Restore">
            <summary>
              Looks up a localized string similar to Restore.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAndClose">
            <summary>
              Looks up a localized string similar to Save and Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAndCloseCommandText">
            <summary>
              Looks up a localized string similar to _Save &amp; Close.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveAppointment">
            <summary>
              Looks up a localized string similar to Save Appointment.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SaveRecurrence">
            <summary>
              Looks up a localized string similar to Save Recurrence Rule.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Second">
            <summary>
              Looks up a localized string similar to second.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetDayViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetMonthViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to month.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.SetWeekViewMode">
            <summary>
              Looks up a localized string similar to Sets the scheduler&apos;s view mode to week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Start">
            <summary>
              Looks up a localized string similar to Start:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.StartColon">
            <summary>
              Looks up a localized string similar to S_tart.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.StartTime">
            <summary>
              Looks up a localized string similar to Start time.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.String">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.String1">
            <summary>
              Looks up a localized string similar to Invalid value for WindowClose enum..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Subject">
            <summary>
              Looks up a localized string similar to Sub_ject.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Align_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the align of the TabItems - Left, Right, Center, Justify. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_AllTabsEqualHeight_Description">
            <summary>
              Looks up a localized string similar to Gets or sets whether all the present tabs have equal height. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_BackgroundOpacity_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the opacity of the Background of the TabControl..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_ContentTemplate_Description">
            <summary>
              Looks up a localized string similar to Gets the content template to use for displaying the content of the items..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_OnSelectedContentChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to SelectedContent is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_OnSelectedContentTemplateChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to SelectedContentTemplate is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Orientation_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the orientation of the TabItems in the TabStrip. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_Position_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the Position of the TabStrip with regard to the content. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_ReorderTabRows_Description">
            <summary>
              Looks up a localized string similar to Gets or sets whether the TabItem rows should be reordered when selected. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_SelectedIndex_Description">
            <summary>
              Looks up a localized string similar to &quot;Gets or sets the index of the selected item. The default value is -1 which means that no item is selected. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControl_SelectedTab_Description">
            <summary>
              Looks up a localized string similar to Gets or sets the currently selected tab. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlBottomTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to Bottom. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlLeftTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to LeftThis is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlRightTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to RightThis is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabControlTopTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabControl when the TabStripPlacement is set to Top. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIndexChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to Index is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIsMouseOverChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to IsMouseOver is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItem_OnIsSelectedChanged_InvalidOperation">
            <summary>
              Looks up a localized string similar to IsSelected is a read-only dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemBottomTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Bottom. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemLeftTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Left. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemRightTemplateDescription3">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Right. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TabItemTopTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the template of the TabItem when the TabStripPlacement is set to Top. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TextCategory">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.The">
            <summary>
              Looks up a localized string similar to Th_e.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Third">
            <summary>
              Looks up a localized string similar to third.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TransformCategory">
            <summary>
              Looks up a localized string similar to Transform.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropAfter">
            <summary>
              Looks up a localized string similar to Drop after .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropBefore">
            <summary>
              Looks up a localized string similar to Drop before .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.TreeViewDropIn">
            <summary>
              Looks up a localized string similar to Drop in .
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Untitled">
            <summary>
              Looks up a localized string similar to Untitled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBrowse">
            <summary>
              Looks up a localized string similar to Browse.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBrowseAppend">
            <summary>
              Looks up a localized string similar to Add more files.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadBufferSizeSoBig">
            <summary>
              Looks up a localized string similar to BufferSize too big. Please set it to a smaller value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionSelect">
            <summary>
              Looks up a localized string similar to Select files to upload.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionSelected">
            <summary>
              Looks up a localized string similar to Selected Files:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionUploaded">
            <summary>
              Looks up a localized string similar to Upload Done.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadCaptionUploading">
            <summary>
              Looks up a localized string similar to Uploading....
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadHandlerNotFoundOrFailed">
            <summary>
              Looks up a localized string similar to Handler not found or execution of the handler failed!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadItemDismissed">
            <summary>
              Looks up a localized string similar to Item dismissed..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadPause">
            <summary>
              Looks up a localized string similar to Pause.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestriction">
            <summary>
              Looks up a localized string similar to Some of selected files are restricted by:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionCount">
            <summary>
              Looks up a localized string similar to Max number of uploaded files;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionSize">
            <summary>
              Looks up a localized string similar to Max file size;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadRestrictionTotalSize">
            <summary>
              Looks up a localized string similar to Total size of all uploaded files;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadResume">
            <summary>
              Looks up a localized string similar to Resume.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadTotal">
            <summary>
              Looks up a localized string similar to Total.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUnknownError">
            <summary>
              Looks up a localized string similar to Unknown error!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUpload">
            <summary>
              Looks up a localized string similar to Upload.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUploadServiceUrlInvalidPropertyValue">
            <summary>
              Looks up a localized string similar to Invalid upload url. Please make sure the url is absolute!.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.UploadUploadServiceUrlSetProperty">
            <summary>
              Looks up a localized string similar to Property UploadServiceUrl not set.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Week">
            <summary>
              Looks up a localized string similar to _Week.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeekDays">
            <summary>
              Looks up a localized string similar to weekday.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeekendDays">
            <summary>
              Looks up a localized string similar to weekend day.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Weekly">
            <summary>
              Looks up a localized string similar to _Weekly.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WeeksOn">
            <summary>
              Looks up a localized string similar to week(s) on:.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowDialogResultDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a DialogResult value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIconDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the Icon image to appear in the RadWindow title bar. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIconTemplateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the IconTemplate property. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidShowException">
            <summary>
              Looks up a localized string similar to You cannot hide or show a window which has already been closed..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidValueForPinMode">
            <summary>
              Looks up a localized string similar to Invalid value for PinMode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidValueForResizeMode">
            <summary>
              Looks up a localized string similar to Invalid value for ResizeMode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidValueForWindowAnimation">
            <summary>
              Looks up a localized string similar to Invalid value for WindowAnimation enum..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidValueForWindowStartupLocation">
            <summary>
              Looks up a localized string similar to Invalid value for WindowStartupLocation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowInvalidValueForWindowState">
            <summary>
              Looks up a localized string similar to Invalid value for WindowState.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIsClosedDescription">
            <summary>
              Looks up a localized string similar to Gets a value for the RadWindow representing the current closed state. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIsMaximizedDescription">
            <summary>
              Looks up a localized string similar to Gets a value that represents whether the RadWindow is maximized..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIsModalDescription">
            <summary>
              Looks up a localized string similar to Gets a value that represents whether the RadWindow is modal..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIsOpenDescription">
            <summary>
              Looks up a localized string similar to Gets a value for the RadWindow representing the current open state. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowIsPinnedDescription">
            <summary>
              Looks up a localized string similar to Gets the value representing whether the RadWindow is pinned;.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowLeftDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a value that represents the distance between the left side of an element and the left side of the page. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowLeftOffsetDescription">
            <summary>
              Looks up a localized string similar to Gets or sets an offset value for the Left position in case of WindowStartupLocation.CenterParent and WindowStartupLocation.CenterParent.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowModalBrushDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a title brush for the modal background of a window. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowParentNotLoadedException">
            <summary>
              Looks up a localized string similar to The visual parent of RadWindow is still not loaded in the visual tree. Therefore, the actual size of the parent is unknown..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowPinModeDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a PinMode value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowPreserveSizeandLocationDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the value which determines whether the window preserves its size and location when WindowState property is changed. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowPromptResultDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a PromptResult value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowResizeModeDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a ResizeMode value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowTitleBrushDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a title brush for the title. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowTopDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a value that represents the distance between the top of an element and the top of the page. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowTopMostDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a value that indicates whether a window appears in the topmost z-order. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowTopOffsetDescription">
            <summary>
              Looks up a localized string similar to Gets or sets an offset value for the Top position in case of WindowStartupLocation.CenterParent and WindowStartupLocation.CenterParent.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowWindowAnimationDescription">
            <summary>
              Looks up a localized string similar to Gets or sets the WindowAnimation state of the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowWindowStartupLocationDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a WindowStartupLocation value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowWindowStateDescription">
            <summary>
              Looks up a localized string similar to Gets or sets a WindowState value for the RadWindow. This is a dependency property..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.WindowZDescription">
            <summary>
              Looks up a localized string similar to Gets the Z order of the RadWindow..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Strings.Yearly">
            <summary>
              Looks up a localized string similar to _Yearly.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SRCategoryAttribute">
            <exclude/>
            <excludetoc/>
            <summary>
            This attribute provides the designber with localized category string.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRCategoryAttribute.#ctor(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Initializes a new instance of the SRCategoryAttribute class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRCategoryAttribute.GetLocalizedString(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a localized string with the given key.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SRDescriptionAttribute">
            <exclude/>
            <excludetoc/>
            <summary>
            This attribute provides the designber with localized description string.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRDescriptionAttribute.#ctor(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Initializes a new instance of the SRDescriptionAttribute class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SRDescriptionAttribute.Description">
            <exclude/>
            <excludetoc/>
            <summary>
            Gets the text description.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SRLoader`1">
            <exclude/>
            <excludetoc/>
            <summary>
            String resource loader.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetResources(System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns the ResourceManager for the given namespace.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetObject(System.String,System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns an object from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetString(System.String,System.String)">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a string from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SRLoader`1.GetString(System.String,System.String,System.Object[])">
            <exclude/>
            <excludetoc/>
            <summary>
            Returns a string from the resources with the given namespace and name.
            </summary>
        </member>
        <member name="T:System.ComponentModel.BrowsableAttribute">
            <exclude />
            <excludeToc />
            <summary>
            This attribute is intended for WPF code compatibility only, it will be ignored by the designer.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.Default">
            <exclude />
            <excludeToc />
            <summary>
            Returns an instance of the attribute where the Browsable is set to the default value, Yes.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.No">
            <exclude />
            <excludeToc />
            <summary>
            Returns an instance of the attribute where the Browsable is set to No.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
            <exclude />
            <excludeToc />
            <summary>
            Returns an instance of the attribute where the Browsable is set to Yes.
            </summary>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
            <exclude />
            <excludeToc />
            <summary>
            Initializes a new instance of the BrowsableAttribute class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null.</param>
            <returns>
            True if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
            <exclude />
            <excludeToc />
            <summary>
            Gets a value indicating whether this attribute is the same as the Default attribute.
            </summary>
        </member>
        <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
            <exclude />
            <excludeToc />
            <summary>
            Gets a value indicating whether the member is browsable.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DefaultEventAttribute">
            <exclude />
            <excludeToc />
            <summary>
            When added to a class, it specifies its default event.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DefaultEventAttribute.Default">
            <summary>
            Same as [DefaultEvent(null)].
            </summary>
        </member>
        <member name="M:System.ComponentModel.DefaultEventAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DefaultEventAttribute class.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null.</param>
            <returns>
            True if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DefaultEventAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:System.ComponentModel.DefaultEventAttribute.Name">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DefaultPropertyAttribute">
            <exclude />
            <excludeToc />
            <summary>
            Returns an instance of the attribute where the Browsable is set to the default value, Yes.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DefaultPropertyAttribute.Default">
            <exclude />
            <excludeToc />
            <summary>
            Returns an instance of the attribute where the Browsable is set to the default value, null.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)">
            <exclude />
            <excludeToc />
            <summary>
            Initializes a new instance of the DefaultPropertyAttribute class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null.</param>
            <returns>
            True if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:System.ComponentModel.DefaultPropertyAttribute.Name">
            <exclude />
            <excludeToc />
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibility">
            <summary>
            Indicates whether the marked member should be visible to the designer serializer.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
            <summary>
            It will be hidden.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
            <summary>
            It will be visible.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
            <summary>
            It will act as a content.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
            <summary>
            This class will be ignred by the designer and is included for WPF code compatibility.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
            <summary>
            Returns an instance with Visibility set Content.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
            <summary>
            Returns an instance with Visibility set to the default value (Visible).
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
            <summary>
            Returns an instance with Visibility set Hidden.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
            <summary>
            Returns an instance with Visibility set Visible.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
            <summary>
            Initializes a new instance of the DesignerSerializationVisibilityAttribute class.
            </summary>
            <param name="visibility">The visibility.</param>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to compare with this instance or null.</param>
            <returns>
            True if <paramref name="obj"/> equals the type and value of this instance; otherwise, false.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
            <summary>
            Gets a value indicating whether it is a default attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
            <summary>
            Gets the DesignerSerializationVisibility.
            </summary>
        </member>
    </members>
</doc>
