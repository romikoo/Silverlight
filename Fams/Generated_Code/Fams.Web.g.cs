//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fams
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Web.Ria.Data;
    using System.Windows.Ria;
    using System.Windows.Ria.Services;
    
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class WebContext : WebContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the WebContext class.
        /// </summary>
        public WebContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="Application.ApplicationLifetimeObjects"/>
        public new static WebContext Current
        {
            get
            {
                return ((WebContext)(WebContextBase.Current));
            }
        }
    }
}
namespace Fams.Web
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Web.Ria.Data;
    using System.Windows.Ria;
    using System.Windows.Ria.Services;
    
    
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/Fams.Web")]
    public sealed partial class Fams_Freq : Entity
    {
        
        private int _bandWidth;
        
        private long _freq;
        
        private int _id;
        
        private int _licence_id;
        
        private bool _reestrit;
        
        private string _remark;
        
        private Nullable<int> _zone_city_id;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnBandWidthChanging(int value);
        partial void OnBandWidthChanged();
        partial void OnfreqChanging(long value);
        partial void OnfreqChanged();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void Onlicence_idChanging(int value);
        partial void Onlicence_idChanged();
        partial void OnreestritChanging(bool value);
        partial void OnreestritChanged();
        partial void OnremarkChanging(string value);
        partial void OnremarkChanged();
        partial void Onzone_city_idChanging(Nullable<int> value);
        partial void Onzone_city_idChanged();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Fams_Freq()
        {
            this.OnCreated();
        }
        
        [DataMember()]
        public int BandWidth
        {
            get
            {
                return this._bandWidth;
            }
            set
            {
                if ((this._bandWidth != value))
                {
                    this.ValidateProperty("BandWidth", value);
                    this.OnBandWidthChanging(value);
                    this.RaiseDataMemberChanging("BandWidth");
                    this._bandWidth = value;
                    this.RaiseDataMemberChanged("BandWidth");
                    this.OnBandWidthChanged();
                }
            }
        }
        
        [DataMember()]
        public long freq
        {
            get
            {
                return this._freq;
            }
            set
            {
                if ((this._freq != value))
                {
                    this.ValidateProperty("freq", value);
                    this.OnfreqChanging(value);
                    this.RaiseDataMemberChanging("freq");
                    this._freq = value;
                    this.RaiseDataMemberChanged("freq");
                    this.OnfreqChanged();
                }
            }
        }
        
        [DataMember()]
        [Key()]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.ValidateProperty("id", value);
                    this.OnidChanging(value);
                    this.RaiseDataMemberChanging("id");
                    this._id = value;
                    this.RaiseDataMemberChanged("id");
                    this.OnidChanged();
                }
            }
        }
        
        [DataMember()]
        public int licence_id
        {
            get
            {
                return this._licence_id;
            }
            set
            {
                if ((this._licence_id != value))
                {
                    this.ValidateProperty("licence_id", value);
                    this.Onlicence_idChanging(value);
                    this.RaiseDataMemberChanging("licence_id");
                    this._licence_id = value;
                    this.RaiseDataMemberChanged("licence_id");
                    this.Onlicence_idChanged();
                }
            }
        }
        
        [DataMember()]
        public bool reestrit
        {
            get
            {
                return this._reestrit;
            }
            set
            {
                if ((this._reestrit != value))
                {
                    this.ValidateProperty("reestrit", value);
                    this.OnreestritChanging(value);
                    this.RaiseDataMemberChanging("reestrit");
                    this._reestrit = value;
                    this.RaiseDataMemberChanged("reestrit");
                    this.OnreestritChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(100)]
        public string remark
        {
            get
            {
                return this._remark;
            }
            set
            {
                if ((this._remark != value))
                {
                    this.ValidateProperty("remark", value);
                    this.OnremarkChanging(value);
                    this.RaiseDataMemberChanging("remark");
                    this._remark = value;
                    this.RaiseDataMemberChanged("remark");
                    this.OnremarkChanged();
                }
            }
        }
        
        [DataMember()]
        public Nullable<int> zone_city_id
        {
            get
            {
                return this._zone_city_id;
            }
            set
            {
                if ((this._zone_city_id != value))
                {
                    this.ValidateProperty("zone_city_id", value);
                    this.Onzone_city_idChanging(value);
                    this.RaiseDataMemberChanging("zone_city_id");
                    this._zone_city_id = value;
                    this.RaiseDataMemberChanged("zone_city_id");
                    this.Onzone_city_idChanged();
                }
            }
        }
        
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/Fams.Web")]
    public sealed partial class fls_COMPANY_INFO : Entity
    {
        
        private string _chief_Position;
        
        private short _comp_Account;
        
        private string _comp_Address;
        
        private string _comp_Chief;
        
        private string _comp_City;
        
        private string _comp_Cont_Address;
        
        private string _comp_Cont_city;
        
        private string _comp_Cont_fax;
        
        private string _comp_Cont_index;
        
        private string _comp_Cont_tel;
        
        private string _comp_Fax;
        
        private string _comp_Index;
        
        private string _comp_Mail;
        
        private string _comp_Name;
        
        private string _comp_Tel;
        
        private string _comp_URL;
        
        private string _contact_name;
        
        private Nullable<DateTime> _gave;
        
        private bool _has_no_freq;
        
        private int _id;
        
        private bool _rec_Form1;
        
        private Nullable<DateTime> _received;
        
        private string _remark;
        
        private Nullable<DateTime> _sent;
        
        private string _tax_id;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnChief_PositionChanging(string value);
        partial void OnChief_PositionChanged();
        partial void OnComp_AccountChanging(short value);
        partial void OnComp_AccountChanged();
        partial void OnComp_AddressChanging(string value);
        partial void OnComp_AddressChanged();
        partial void OnComp_ChiefChanging(string value);
        partial void OnComp_ChiefChanged();
        partial void OnComp_CityChanging(string value);
        partial void OnComp_CityChanged();
        partial void OnComp_Cont_AddressChanging(string value);
        partial void OnComp_Cont_AddressChanged();
        partial void OnComp_Cont_cityChanging(string value);
        partial void OnComp_Cont_cityChanged();
        partial void OnComp_Cont_faxChanging(string value);
        partial void OnComp_Cont_faxChanged();
        partial void OnComp_Cont_indexChanging(string value);
        partial void OnComp_Cont_indexChanged();
        partial void OnComp_Cont_telChanging(string value);
        partial void OnComp_Cont_telChanged();
        partial void OnComp_FaxChanging(string value);
        partial void OnComp_FaxChanged();
        partial void OnComp_IndexChanging(string value);
        partial void OnComp_IndexChanged();
        partial void OnComp_MailChanging(string value);
        partial void OnComp_MailChanged();
        partial void OnComp_NameChanging(string value);
        partial void OnComp_NameChanged();
        partial void OnComp_TelChanging(string value);
        partial void OnComp_TelChanged();
        partial void OnComp_URLChanging(string value);
        partial void OnComp_URLChanged();
        partial void OnCONTACT_NAMEChanging(string value);
        partial void OnCONTACT_NAMEChanged();
        partial void OngaveChanging(Nullable<DateTime> value);
        partial void OngaveChanged();
        partial void OnHAS_NO_FREQChanging(bool value);
        partial void OnHAS_NO_FREQChanged();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnREC_Form1Changing(bool value);
        partial void OnREC_Form1Changed();
        partial void OnReceivedChanging(Nullable<DateTime> value);
        partial void OnReceivedChanged();
        partial void OnremarkChanging(string value);
        partial void OnremarkChanged();
        partial void OnSENTChanging(Nullable<DateTime> value);
        partial void OnSENTChanged();
        partial void Ontax_idChanging(string value);
        partial void Ontax_idChanged();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public fls_COMPANY_INFO()
        {
            this.OnCreated();
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Chief_Position
        {
            get
            {
                return this._chief_Position;
            }
            set
            {
                if ((this._chief_Position != value))
                {
                    this.ValidateProperty("Chief_Position", value);
                    this.OnChief_PositionChanging(value);
                    this.RaiseDataMemberChanging("Chief_Position");
                    this._chief_Position = value;
                    this.RaiseDataMemberChanged("Chief_Position");
                    this.OnChief_PositionChanged();
                }
            }
        }
        
        [DataMember()]
        public short Comp_Account
        {
            get
            {
                return this._comp_Account;
            }
            set
            {
                if ((this._comp_Account != value))
                {
                    this.ValidateProperty("Comp_Account", value);
                    this.OnComp_AccountChanging(value);
                    this.RaiseDataMemberChanging("Comp_Account");
                    this._comp_Account = value;
                    this.RaiseDataMemberChanged("Comp_Account");
                    this.OnComp_AccountChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_Address
        {
            get
            {
                return this._comp_Address;
            }
            set
            {
                if ((this._comp_Address != value))
                {
                    this.ValidateProperty("Comp_Address", value);
                    this.OnComp_AddressChanging(value);
                    this.RaiseDataMemberChanging("Comp_Address");
                    this._comp_Address = value;
                    this.RaiseDataMemberChanged("Comp_Address");
                    this.OnComp_AddressChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_Chief
        {
            get
            {
                return this._comp_Chief;
            }
            set
            {
                if ((this._comp_Chief != value))
                {
                    this.ValidateProperty("Comp_Chief", value);
                    this.OnComp_ChiefChanging(value);
                    this.RaiseDataMemberChanging("Comp_Chief");
                    this._comp_Chief = value;
                    this.RaiseDataMemberChanged("Comp_Chief");
                    this.OnComp_ChiefChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(50)]
        public string Comp_City
        {
            get
            {
                return this._comp_City;
            }
            set
            {
                if ((this._comp_City != value))
                {
                    this.ValidateProperty("Comp_City", value);
                    this.OnComp_CityChanging(value);
                    this.RaiseDataMemberChanging("Comp_City");
                    this._comp_City = value;
                    this.RaiseDataMemberChanged("Comp_City");
                    this.OnComp_CityChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_Cont_Address
        {
            get
            {
                return this._comp_Cont_Address;
            }
            set
            {
                if ((this._comp_Cont_Address != value))
                {
                    this.ValidateProperty("Comp_Cont_Address", value);
                    this.OnComp_Cont_AddressChanging(value);
                    this.RaiseDataMemberChanging("Comp_Cont_Address");
                    this._comp_Cont_Address = value;
                    this.RaiseDataMemberChanged("Comp_Cont_Address");
                    this.OnComp_Cont_AddressChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(75)]
        public string Comp_Cont_city
        {
            get
            {
                return this._comp_Cont_city;
            }
            set
            {
                if ((this._comp_Cont_city != value))
                {
                    this.ValidateProperty("Comp_Cont_city", value);
                    this.OnComp_Cont_cityChanging(value);
                    this.RaiseDataMemberChanging("Comp_Cont_city");
                    this._comp_Cont_city = value;
                    this.RaiseDataMemberChanged("Comp_Cont_city");
                    this.OnComp_Cont_cityChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(25)]
        public string Comp_Cont_fax
        {
            get
            {
                return this._comp_Cont_fax;
            }
            set
            {
                if ((this._comp_Cont_fax != value))
                {
                    this.ValidateProperty("Comp_Cont_fax", value);
                    this.OnComp_Cont_faxChanging(value);
                    this.RaiseDataMemberChanging("Comp_Cont_fax");
                    this._comp_Cont_fax = value;
                    this.RaiseDataMemberChanged("Comp_Cont_fax");
                    this.OnComp_Cont_faxChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(10)]
        public string Comp_Cont_index
        {
            get
            {
                return this._comp_Cont_index;
            }
            set
            {
                if ((this._comp_Cont_index != value))
                {
                    this.ValidateProperty("Comp_Cont_index", value);
                    this.OnComp_Cont_indexChanging(value);
                    this.RaiseDataMemberChanging("Comp_Cont_index");
                    this._comp_Cont_index = value;
                    this.RaiseDataMemberChanged("Comp_Cont_index");
                    this.OnComp_Cont_indexChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(25)]
        public string Comp_Cont_tel
        {
            get
            {
                return this._comp_Cont_tel;
            }
            set
            {
                if ((this._comp_Cont_tel != value))
                {
                    this.ValidateProperty("Comp_Cont_tel", value);
                    this.OnComp_Cont_telChanging(value);
                    this.RaiseDataMemberChanging("Comp_Cont_tel");
                    this._comp_Cont_tel = value;
                    this.RaiseDataMemberChanged("Comp_Cont_tel");
                    this.OnComp_Cont_telChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(25)]
        public string Comp_Fax
        {
            get
            {
                return this._comp_Fax;
            }
            set
            {
                if ((this._comp_Fax != value))
                {
                    this.ValidateProperty("Comp_Fax", value);
                    this.OnComp_FaxChanging(value);
                    this.RaiseDataMemberChanging("Comp_Fax");
                    this._comp_Fax = value;
                    this.RaiseDataMemberChanged("Comp_Fax");
                    this.OnComp_FaxChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(10)]
        public string Comp_Index
        {
            get
            {
                return this._comp_Index;
            }
            set
            {
                if ((this._comp_Index != value))
                {
                    this.ValidateProperty("Comp_Index", value);
                    this.OnComp_IndexChanging(value);
                    this.RaiseDataMemberChanging("Comp_Index");
                    this._comp_Index = value;
                    this.RaiseDataMemberChanged("Comp_Index");
                    this.OnComp_IndexChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_Mail
        {
            get
            {
                return this._comp_Mail;
            }
            set
            {
                if ((this._comp_Mail != value))
                {
                    this.ValidateProperty("Comp_Mail", value);
                    this.OnComp_MailChanging(value);
                    this.RaiseDataMemberChanging("Comp_Mail");
                    this._comp_Mail = value;
                    this.RaiseDataMemberChanged("Comp_Mail");
                    this.OnComp_MailChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_Name
        {
            get
            {
                return this._comp_Name;
            }
            set
            {
                if ((this._comp_Name != value))
                {
                    this.ValidateProperty("Comp_Name", value);
                    this.OnComp_NameChanging(value);
                    this.RaiseDataMemberChanging("Comp_Name");
                    this._comp_Name = value;
                    this.RaiseDataMemberChanged("Comp_Name");
                    this.OnComp_NameChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(25)]
        public string Comp_Tel
        {
            get
            {
                return this._comp_Tel;
            }
            set
            {
                if ((this._comp_Tel != value))
                {
                    this.ValidateProperty("Comp_Tel", value);
                    this.OnComp_TelChanging(value);
                    this.RaiseDataMemberChanging("Comp_Tel");
                    this._comp_Tel = value;
                    this.RaiseDataMemberChanged("Comp_Tel");
                    this.OnComp_TelChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string Comp_URL
        {
            get
            {
                return this._comp_URL;
            }
            set
            {
                if ((this._comp_URL != value))
                {
                    this.ValidateProperty("Comp_URL", value);
                    this.OnComp_URLChanging(value);
                    this.RaiseDataMemberChanging("Comp_URL");
                    this._comp_URL = value;
                    this.RaiseDataMemberChanged("Comp_URL");
                    this.OnComp_URLChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(250)]
        public string CONTACT_NAME
        {
            get
            {
                return this._contact_name;
            }
            set
            {
                if ((this._contact_name != value))
                {
                    this.ValidateProperty("CONTACT_NAME", value);
                    this.OnCONTACT_NAMEChanging(value);
                    this.RaiseDataMemberChanging("CONTACT_NAME");
                    this._contact_name = value;
                    this.RaiseDataMemberChanged("CONTACT_NAME");
                    this.OnCONTACT_NAMEChanged();
                }
            }
        }
        
        [DataMember()]
        public Nullable<DateTime> gave
        {
            get
            {
                return this._gave;
            }
            set
            {
                if ((this._gave != value))
                {
                    this.ValidateProperty("gave", value);
                    this.OngaveChanging(value);
                    this.RaiseDataMemberChanging("gave");
                    this._gave = value;
                    this.RaiseDataMemberChanged("gave");
                    this.OngaveChanged();
                }
            }
        }
        
        [DataMember()]
        public bool HAS_NO_FREQ
        {
            get
            {
                return this._has_no_freq;
            }
            set
            {
                if ((this._has_no_freq != value))
                {
                    this.ValidateProperty("HAS_NO_FREQ", value);
                    this.OnHAS_NO_FREQChanging(value);
                    this.RaiseDataMemberChanging("HAS_NO_FREQ");
                    this._has_no_freq = value;
                    this.RaiseDataMemberChanged("HAS_NO_FREQ");
                    this.OnHAS_NO_FREQChanged();
                }
            }
        }
        
        [DataMember()]
        [Key()]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.ValidateProperty("id", value);
                    this.OnidChanging(value);
                    this.RaiseDataMemberChanging("id");
                    this._id = value;
                    this.RaiseDataMemberChanged("id");
                    this.OnidChanged();
                }
            }
        }
        
        [DataMember()]
        public bool REC_Form1
        {
            get
            {
                return this._rec_Form1;
            }
            set
            {
                if ((this._rec_Form1 != value))
                {
                    this.ValidateProperty("REC_Form1", value);
                    this.OnREC_Form1Changing(value);
                    this.RaiseDataMemberChanging("REC_Form1");
                    this._rec_Form1 = value;
                    this.RaiseDataMemberChanged("REC_Form1");
                    this.OnREC_Form1Changed();
                }
            }
        }
        
        [DataMember()]
        public Nullable<DateTime> Received
        {
            get
            {
                return this._received;
            }
            set
            {
                if ((this._received != value))
                {
                    this.ValidateProperty("Received", value);
                    this.OnReceivedChanging(value);
                    this.RaiseDataMemberChanging("Received");
                    this._received = value;
                    this.RaiseDataMemberChanged("Received");
                    this.OnReceivedChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(4000)]
        public string remark
        {
            get
            {
                return this._remark;
            }
            set
            {
                if ((this._remark != value))
                {
                    this.ValidateProperty("remark", value);
                    this.OnremarkChanging(value);
                    this.RaiseDataMemberChanging("remark");
                    this._remark = value;
                    this.RaiseDataMemberChanged("remark");
                    this.OnremarkChanged();
                }
            }
        }
        
        [DataMember()]
        public Nullable<DateTime> SENT
        {
            get
            {
                return this._sent;
            }
            set
            {
                if ((this._sent != value))
                {
                    this.ValidateProperty("SENT", value);
                    this.OnSENTChanging(value);
                    this.RaiseDataMemberChanging("SENT");
                    this._sent = value;
                    this.RaiseDataMemberChanged("SENT");
                    this.OnSENTChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(30)]
        public string tax_id
        {
            get
            {
                return this._tax_id;
            }
            set
            {
                if ((this._tax_id != value))
                {
                    this.ValidateProperty("tax_id", value);
                    this.Ontax_idChanging(value);
                    this.RaiseDataMemberChanging("tax_id");
                    this._tax_id = value;
                    this.RaiseDataMemberChanged("tax_id");
                    this.Ontax_idChanged();
                }
            }
        }
        
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/Fams.Web")]
    public sealed partial class fls_LICENCE_INFO : Entity
    {
        
        private string _comments;
        
        private int _comp_id;
        
        private int _id;
        
        private Nullable<DateTime> _lic_expiry_date;
        
        private Nullable<DateTime> _lic_issu_date;
        
        private string _licence;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCOMMENTSChanging(string value);
        partial void OnCOMMENTSChanged();
        partial void Oncomp_idChanging(int value);
        partial void Oncomp_idChanged();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnLIC_EXPIRY_DATEChanging(Nullable<DateTime> value);
        partial void OnLIC_EXPIRY_DATEChanged();
        partial void OnLIC_ISSU_DATEChanging(Nullable<DateTime> value);
        partial void OnLIC_ISSU_DATEChanged();
        partial void OnLICENCEChanging(string value);
        partial void OnLICENCEChanged();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public fls_LICENCE_INFO()
        {
            this.OnCreated();
        }
        
        [DataMember()]
        [StringLength(500)]
        public string COMMENTS
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((this._comments != value))
                {
                    this.ValidateProperty("COMMENTS", value);
                    this.OnCOMMENTSChanging(value);
                    this.RaiseDataMemberChanging("COMMENTS");
                    this._comments = value;
                    this.RaiseDataMemberChanged("COMMENTS");
                    this.OnCOMMENTSChanged();
                }
            }
        }
        
        [DataMember()]
        public int comp_id
        {
            get
            {
                return this._comp_id;
            }
            set
            {
                if ((this._comp_id != value))
                {
                    this.ValidateProperty("comp_id", value);
                    this.Oncomp_idChanging(value);
                    this.RaiseDataMemberChanging("comp_id");
                    this._comp_id = value;
                    this.RaiseDataMemberChanged("comp_id");
                    this.Oncomp_idChanged();
                }
            }
        }
        
        [DataMember()]
        [Key()]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.ValidateProperty("id", value);
                    this.OnidChanging(value);
                    this.RaiseDataMemberChanging("id");
                    this._id = value;
                    this.RaiseDataMemberChanged("id");
                    this.OnidChanged();
                }
            }
        }
        
        [DataMember()]
        public Nullable<DateTime> LIC_EXPIRY_DATE
        {
            get
            {
                return this._lic_expiry_date;
            }
            set
            {
                if ((this._lic_expiry_date != value))
                {
                    this.ValidateProperty("LIC_EXPIRY_DATE", value);
                    this.OnLIC_EXPIRY_DATEChanging(value);
                    this.RaiseDataMemberChanging("LIC_EXPIRY_DATE");
                    this._lic_expiry_date = value;
                    this.RaiseDataMemberChanged("LIC_EXPIRY_DATE");
                    this.OnLIC_EXPIRY_DATEChanged();
                }
            }
        }
        
        [DataMember()]
        public Nullable<DateTime> LIC_ISSU_DATE
        {
            get
            {
                return this._lic_issu_date;
            }
            set
            {
                if ((this._lic_issu_date != value))
                {
                    this.ValidateProperty("LIC_ISSU_DATE", value);
                    this.OnLIC_ISSU_DATEChanging(value);
                    this.RaiseDataMemberChanging("LIC_ISSU_DATE");
                    this._lic_issu_date = value;
                    this.RaiseDataMemberChanged("LIC_ISSU_DATE");
                    this.OnLIC_ISSU_DATEChanged();
                }
            }
        }
        
        [DataMember()]
        [StringLength(15)]
        public string LICENCE
        {
            get
            {
                return this._licence;
            }
            set
            {
                if ((this._licence != value))
                {
                    this.ValidateProperty("LICENCE", value);
                    this.OnLICENCEChanging(value);
                    this.RaiseDataMemberChanging("LICENCE");
                    this._licence = value;
                    this.RaiseDataMemberChanged("LICENCE");
                    this.OnLICENCEChanged();
                }
            }
        }
        
        public override object GetIdentity()
        {
            return this._id;
        }
    }
}
namespace Fams.Web.Services
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.ServiceModel;
    using System.Web.Ria.Data;
    using System.Windows.Ria;
    using System.Windows.Ria.Services;
    using Fams.Web;
    
    
    public sealed partial class CompanyDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CompanyDomainContext() : 
                this(new WebDomainClient<ICompanyDomainServiceContract>(new Uri("Fams-Web-Services-CompanyDomainService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a data service URI.
        /// </summary>
        /// <param name="serviceUri">
        /// The CompanyDomainService data service URI.
        /// </param>
        public CompanyDomainContext(Uri serviceUri) : 
                this(new WebDomainClient<ICompanyDomainServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a DomainClient instance.
        /// </summary>
        /// <param name="domainClient">
        /// The DomainClient instance the DomainContext should use.
        /// </param>
        public CompanyDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        public EntitySet<fls_COMPANY_INFO> fls_COMPANY_INFOs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<fls_COMPANY_INFO>();
            }
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetFls_COMPANY_INFOs'.
        /// </summary>
        public EntityQuery<fls_COMPANY_INFO> GetFls_COMPANY_INFOsQuery()
        {
            this.ValidateMethod("GetFls_COMPANY_INFOsQuery", null);
            return base.CreateQuery<fls_COMPANY_INFO>("GetFls_COMPANY_INFOs", null, false, true);
        }
        
        protected override EntityContainer CreateEntityContainer()
        {
            return new CompanyDomainContextEntityContainer();
        }
        
        [ServiceContract()]
        public interface ICompanyDomainServiceContract
        {
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/CompanyDomainService/GetFls_COMPANY_INFOsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CompanyDomainService/GetFls_COMPANY_INFOs", ReplyAction="http://tempuri.org/CompanyDomainService/GetFls_COMPANY_INFOsResponse")]
            IAsyncResult BeginGetFls_COMPANY_INFOs(AsyncCallback callback, object asyncState);
            
            QueryResult<fls_COMPANY_INFO> EndGetFls_COMPANY_INFOs(IAsyncResult result);
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/CompanyDomainService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CompanyDomainService/SubmitChanges", ReplyAction="http://tempuri.org/CompanyDomainService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class CompanyDomainContextEntityContainer : EntityContainer
        {
            
            public CompanyDomainContextEntityContainer()
            {
                this.CreateEntitySet<fls_COMPANY_INFO>(EntitySetOperations.All);
            }
        }
    }
    
    public sealed partial class FreqDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public FreqDomainContext() : 
                this(new WebDomainClient<IFreqDomainServiceContract>(new Uri("Fams-Web-Services-FreqDomainService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a data service URI.
        /// </summary>
        /// <param name="serviceUri">
        /// The FreqDomainService data service URI.
        /// </param>
        public FreqDomainContext(Uri serviceUri) : 
                this(new WebDomainClient<IFreqDomainServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a DomainClient instance.
        /// </summary>
        /// <param name="domainClient">
        /// The DomainClient instance the DomainContext should use.
        /// </param>
        public FreqDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        public EntitySet<Fams_Freq> Fams_Freqs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Fams_Freq>();
            }
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetFams_Freqs'.
        /// </summary>
        public EntityQuery<Fams_Freq> GetFams_FreqsQuery()
        {
            this.ValidateMethod("GetFams_FreqsQuery", null);
            return base.CreateQuery<Fams_Freq>("GetFams_Freqs", null, false, true);
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetFrequenciesForLicence'.
        /// </summary>
        public EntityQuery<Fams_Freq> GetFrequenciesForLicenceQuery(int licence_id)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("licence_id", licence_id);
            this.ValidateMethod("GetFrequenciesForLicenceQuery", parameters);
            return base.CreateQuery<Fams_Freq>("GetFrequenciesForLicence", parameters, false, true);
        }
        
        protected override EntityContainer CreateEntityContainer()
        {
            return new FreqDomainContextEntityContainer();
        }
        
        [ServiceContract()]
        public interface IFreqDomainServiceContract
        {
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FreqDomainService/GetFams_FreqsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FreqDomainService/GetFams_Freqs", ReplyAction="http://tempuri.org/FreqDomainService/GetFams_FreqsResponse")]
            IAsyncResult BeginGetFams_Freqs(AsyncCallback callback, object asyncState);
            
            QueryResult<Fams_Freq> EndGetFams_Freqs(IAsyncResult result);
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FreqDomainService/GetFrequenciesForLicenceDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FreqDomainService/GetFrequenciesForLicence", ReplyAction="http://tempuri.org/FreqDomainService/GetFrequenciesForLicenceResponse")]
            IAsyncResult BeginGetFrequenciesForLicence(int licence_id, AsyncCallback callback, object asyncState);
            
            QueryResult<Fams_Freq> EndGetFrequenciesForLicence(IAsyncResult result);
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/FreqDomainService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/FreqDomainService/SubmitChanges", ReplyAction="http://tempuri.org/FreqDomainService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class FreqDomainContextEntityContainer : EntityContainer
        {
            
            public FreqDomainContextEntityContainer()
            {
                this.CreateEntitySet<Fams_Freq>(EntitySetOperations.All);
            }
        }
    }
    
    public sealed partial class LicenceDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public LicenceDomainContext() : 
                this(new WebDomainClient<ILicenceDomainServiceContract>(new Uri("Fams-Web-Services-LicenceDomainService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a data service URI.
        /// </summary>
        /// <param name="serviceUri">
        /// The LicenceDomainService data service URI.
        /// </param>
        public LicenceDomainContext(Uri serviceUri) : 
                this(new WebDomainClient<ILicenceDomainServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a DomainClient instance.
        /// </summary>
        /// <param name="domainClient">
        /// The DomainClient instance the DomainContext should use.
        /// </param>
        public LicenceDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        public EntitySet<fls_LICENCE_INFO> fls_LICENCE_INFOs
        {
            get
            {
                return base.EntityContainer.GetEntitySet<fls_LICENCE_INFO>();
            }
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetFls_LICENCE_INFOs'.
        /// </summary>
        public EntityQuery<fls_LICENCE_INFO> GetFls_LICENCE_INFOsQuery()
        {
            this.ValidateMethod("GetFls_LICENCE_INFOsQuery", null);
            return base.CreateQuery<fls_LICENCE_INFO>("GetFls_LICENCE_INFOs", null, false, true);
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetLicencesForCompany'.
        /// </summary>
        public EntityQuery<fls_LICENCE_INFO> GetLicencesForCompanyQuery(int comp_id)
        {
            Dictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("comp_id", comp_id);
            this.ValidateMethod("GetLicencesForCompanyQuery", parameters);
            return base.CreateQuery<fls_LICENCE_INFO>("GetLicencesForCompany", parameters, false, true);
        }
        
        protected override EntityContainer CreateEntityContainer()
        {
            return new LicenceDomainContextEntityContainer();
        }
        
        [ServiceContract()]
        public interface ILicenceDomainServiceContract
        {
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/LicenceDomainService/GetFls_LICENCE_INFOsDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/LicenceDomainService/GetFls_LICENCE_INFOs", ReplyAction="http://tempuri.org/LicenceDomainService/GetFls_LICENCE_INFOsResponse")]
            IAsyncResult BeginGetFls_LICENCE_INFOs(AsyncCallback callback, object asyncState);
            
            QueryResult<fls_LICENCE_INFO> EndGetFls_LICENCE_INFOs(IAsyncResult result);
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/LicenceDomainService/GetLicencesForCompanyDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/LicenceDomainService/GetLicencesForCompany", ReplyAction="http://tempuri.org/LicenceDomainService/GetLicencesForCompanyResponse")]
            IAsyncResult BeginGetLicencesForCompany(int comp_id, AsyncCallback callback, object asyncState);
            
            QueryResult<fls_LICENCE_INFO> EndGetLicencesForCompany(IAsyncResult result);
            
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/LicenceDomainService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/LicenceDomainService/SubmitChanges", ReplyAction="http://tempuri.org/LicenceDomainService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class LicenceDomainContextEntityContainer : EntityContainer
        {
            
            public LicenceDomainContextEntityContainer()
            {
                this.CreateEntitySet<fls_LICENCE_INFO>(EntitySetOperations.All);
            }
        }
    }
}
